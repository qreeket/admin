/**
 * @fileoverview gRPC-Web generated client stub for qreeket
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.15.8
// source: auth_service.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';
import * as google_protobuf_wrappers_pb from 'google-protobuf/google/protobuf/wrappers_pb';
import * as auth_pb from './auth_pb';


export class AuthServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorlogin = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/login',
    grpcWeb.MethodType.UNARY,
    auth_pb.LoginRequest,
    google_protobuf_wrappers_pb.StringValue,
    (request: auth_pb.LoginRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_wrappers_pb.StringValue.deserializeBinary
  );

  login(
    request: auth_pb.LoginRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_wrappers_pb.StringValue>;

  login(
    request: auth_pb.LoginRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void): grpcWeb.ClientReadableStream<google_protobuf_wrappers_pb.StringValue>;

  login(
    request: auth_pb.LoginRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/login',
        request,
        metadata || {},
        this.methodDescriptorlogin,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/login',
    request,
    metadata || {},
    this.methodDescriptorlogin);
  }

  methodDescriptorregister = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/register',
    grpcWeb.MethodType.UNARY,
    auth_pb.RegisterRequest,
    google_protobuf_wrappers_pb.StringValue,
    (request: auth_pb.RegisterRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_wrappers_pb.StringValue.deserializeBinary
  );

  register(
    request: auth_pb.RegisterRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_wrappers_pb.StringValue>;

  register(
    request: auth_pb.RegisterRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void): grpcWeb.ClientReadableStream<google_protobuf_wrappers_pb.StringValue>;

  register(
    request: auth_pb.RegisterRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/register',
        request,
        metadata || {},
        this.methodDescriptorregister,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/register',
    request,
    metadata || {},
    this.methodDescriptorregister);
  }

  methodDescriptorreset_password = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/reset_password',
    grpcWeb.MethodType.UNARY,
    auth_pb.ResetPasswordRequest,
    google_protobuf_wrappers_pb.StringValue,
    (request: auth_pb.ResetPasswordRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_wrappers_pb.StringValue.deserializeBinary
  );

  reset_password(
    request: auth_pb.ResetPasswordRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_wrappers_pb.StringValue>;

  reset_password(
    request: auth_pb.ResetPasswordRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void): grpcWeb.ClientReadableStream<google_protobuf_wrappers_pb.StringValue>;

  reset_password(
    request: auth_pb.ResetPasswordRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/reset_password',
        request,
        metadata || {},
        this.methodDescriptorreset_password,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/reset_password',
    request,
    metadata || {},
    this.methodDescriptorreset_password);
  }

  methodDescriptorrequest_password_reset = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/request_password_reset',
    grpcWeb.MethodType.UNARY,
    auth_pb.RequestPasswordResetRequest,
    google_protobuf_wrappers_pb.StringValue,
    (request: auth_pb.RequestPasswordResetRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_wrappers_pb.StringValue.deserializeBinary
  );

  request_password_reset(
    request: auth_pb.RequestPasswordResetRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_wrappers_pb.StringValue>;

  request_password_reset(
    request: auth_pb.RequestPasswordResetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void): grpcWeb.ClientReadableStream<google_protobuf_wrappers_pb.StringValue>;

  request_password_reset(
    request: auth_pb.RequestPasswordResetRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/request_password_reset',
        request,
        metadata || {},
        this.methodDescriptorrequest_password_reset,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/request_password_reset',
    request,
    metadata || {},
    this.methodDescriptorrequest_password_reset);
  }

  methodDescriptorlogout = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/logout',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  logout(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  logout(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  logout(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/logout',
        request,
        metadata || {},
        this.methodDescriptorlogout,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/logout',
    request,
    metadata || {},
    this.methodDescriptorlogout);
  }

  methodDescriptorverify_password = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/verify_password',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  verify_password(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  verify_password(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  verify_password(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/verify_password',
        request,
        metadata || {},
        this.methodDescriptorverify_password,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/verify_password',
    request,
    metadata || {},
    this.methodDescriptorverify_password);
  }

  methodDescriptorupgrade_to_premium = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/upgrade_to_premium',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  upgrade_to_premium(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  upgrade_to_premium(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  upgrade_to_premium(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/upgrade_to_premium',
        request,
        metadata || {},
        this.methodDescriptorupgrade_to_premium,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/upgrade_to_premium',
    request,
    metadata || {},
    this.methodDescriptorupgrade_to_premium);
  }

  methodDescriptordowngrade_to_standard = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/downgrade_to_standard',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  downgrade_to_standard(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  downgrade_to_standard(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  downgrade_to_standard(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/downgrade_to_standard',
        request,
        metadata || {},
        this.methodDescriptordowngrade_to_standard,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/downgrade_to_standard',
    request,
    metadata || {},
    this.methodDescriptordowngrade_to_standard);
  }

  methodDescriptorrequest_public_access_token = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/request_public_access_token',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    google_protobuf_wrappers_pb.StringValue,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    google_protobuf_wrappers_pb.StringValue.deserializeBinary
  );

  request_public_access_token(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_wrappers_pb.StringValue>;

  request_public_access_token(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void): grpcWeb.ClientReadableStream<google_protobuf_wrappers_pb.StringValue>;

  request_public_access_token(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/request_public_access_token',
        request,
        metadata || {},
        this.methodDescriptorrequest_public_access_token,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/request_public_access_token',
    request,
    metadata || {},
    this.methodDescriptorrequest_public_access_token);
  }

  methodDescriptorvalidate_access_token = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/validate_access_token',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    auth_pb.ValidateAccessTokenResponse,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    auth_pb.ValidateAccessTokenResponse.deserializeBinary
  );

  validate_access_token(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.ValidateAccessTokenResponse>;

  validate_access_token(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.ValidateAccessTokenResponse) => void): grpcWeb.ClientReadableStream<auth_pb.ValidateAccessTokenResponse>;

  validate_access_token(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.ValidateAccessTokenResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/validate_access_token',
        request,
        metadata || {},
        this.methodDescriptorvalidate_access_token,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/validate_access_token',
    request,
    metadata || {},
    this.methodDescriptorvalidate_access_token);
  }

  methodDescriptorget_account = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/get_account',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    auth_pb.Account,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    auth_pb.Account.deserializeBinary
  );

  get_account(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.Account>;

  get_account(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.Account) => void): grpcWeb.ClientReadableStream<auth_pb.Account>;

  get_account(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.Account) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/get_account',
        request,
        metadata || {},
        this.methodDescriptorget_account,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/get_account',
    request,
    metadata || {},
    this.methodDescriptorget_account);
  }

  methodDescriptorget_account_by_phone_number = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/get_account_by_phone_number',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    auth_pb.Account,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    auth_pb.Account.deserializeBinary
  );

  get_account_by_phone_number(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.Account>;

  get_account_by_phone_number(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.Account) => void): grpcWeb.ClientReadableStream<auth_pb.Account>;

  get_account_by_phone_number(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.Account) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/get_account_by_phone_number',
        request,
        metadata || {},
        this.methodDescriptorget_account_by_phone_number,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/get_account_by_phone_number',
    request,
    metadata || {},
    this.methodDescriptorget_account_by_phone_number);
  }

  methodDescriptorget_account_by_id = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/get_account_by_id',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    auth_pb.Account,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    auth_pb.Account.deserializeBinary
  );

  get_account_by_id(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.Account>;

  get_account_by_id(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.Account) => void): grpcWeb.ClientReadableStream<auth_pb.Account>;

  get_account_by_id(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.Account) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/get_account_by_id',
        request,
        metadata || {},
        this.methodDescriptorget_account_by_id,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/get_account_by_id',
    request,
    metadata || {},
    this.methodDescriptorget_account_by_id);
  }

  methodDescriptorupdate_account = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/update_account',
    grpcWeb.MethodType.UNARY,
    auth_pb.Account,
    auth_pb.Account,
    (request: auth_pb.Account) => {
      return request.serializeBinary();
    },
    auth_pb.Account.deserializeBinary
  );

  update_account(
    request: auth_pb.Account,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.Account>;

  update_account(
    request: auth_pb.Account,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.Account) => void): grpcWeb.ClientReadableStream<auth_pb.Account>;

  update_account(
    request: auth_pb.Account,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.Account) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/update_account',
        request,
        metadata || {},
        this.methodDescriptorupdate_account,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/update_account',
    request,
    metadata || {},
    this.methodDescriptorupdate_account);
  }

  methodDescriptordelete_account = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/delete_account',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  delete_account(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  delete_account(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  delete_account(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/delete_account',
        request,
        metadata || {},
        this.methodDescriptordelete_account,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/delete_account',
    request,
    metadata || {},
    this.methodDescriptordelete_account);
  }

  methodDescriptorauthenticate_account = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/authenticate_account',
    grpcWeb.MethodType.UNARY,
    auth_pb.AuthenticateWithSocialAccountRequest,
    google_protobuf_wrappers_pb.StringValue,
    (request: auth_pb.AuthenticateWithSocialAccountRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_wrappers_pb.StringValue.deserializeBinary
  );

  authenticate_account(
    request: auth_pb.AuthenticateWithSocialAccountRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_wrappers_pb.StringValue>;

  authenticate_account(
    request: auth_pb.AuthenticateWithSocialAccountRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void): grpcWeb.ClientReadableStream<google_protobuf_wrappers_pb.StringValue>;

  authenticate_account(
    request: auth_pb.AuthenticateWithSocialAccountRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/authenticate_account',
        request,
        metadata || {},
        this.methodDescriptorauthenticate_account,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/authenticate_account',
    request,
    metadata || {},
    this.methodDescriptorauthenticate_account);
  }

  methodDescriptorcheck_email = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/check_email',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  check_email(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  check_email(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  check_email(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/check_email',
        request,
        metadata || {},
        this.methodDescriptorcheck_email,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/check_email',
    request,
    metadata || {},
    this.methodDescriptorcheck_email);
  }

  methodDescriptorcheck_phone_number = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/check_phone_number',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  check_phone_number(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  check_phone_number(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  check_phone_number(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/check_phone_number',
        request,
        metadata || {},
        this.methodDescriptorcheck_phone_number,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/check_phone_number',
    request,
    metadata || {},
    this.methodDescriptorcheck_phone_number);
  }

  methodDescriptorget_countries = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/get_countries',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    auth_pb.GetCountriesResponse,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    auth_pb.GetCountriesResponse.deserializeBinary
  );

  get_countries(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.GetCountriesResponse>;

  get_countries(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.GetCountriesResponse) => void): grpcWeb.ClientReadableStream<auth_pb.GetCountriesResponse>;

  get_countries(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.GetCountriesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/get_countries',
        request,
        metadata || {},
        this.methodDescriptorget_countries,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/get_countries',
    request,
    metadata || {},
    this.methodDescriptorget_countries);
  }

  methodDescriptorget_country_by_id = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/get_country_by_id',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    auth_pb.Country,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    auth_pb.Country.deserializeBinary
  );

  get_country_by_id(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.Country>;

  get_country_by_id(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.Country) => void): grpcWeb.ClientReadableStream<auth_pb.Country>;

  get_country_by_id(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.Country) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/get_country_by_id',
        request,
        metadata || {},
        this.methodDescriptorget_country_by_id,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/get_country_by_id',
    request,
    metadata || {},
    this.methodDescriptorget_country_by_id);
  }

  methodDescriptoradd_country = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/add_country',
    grpcWeb.MethodType.UNARY,
    auth_pb.Country,
    auth_pb.Country,
    (request: auth_pb.Country) => {
      return request.serializeBinary();
    },
    auth_pb.Country.deserializeBinary
  );

  add_country(
    request: auth_pb.Country,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.Country>;

  add_country(
    request: auth_pb.Country,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.Country) => void): grpcWeb.ClientReadableStream<auth_pb.Country>;

  add_country(
    request: auth_pb.Country,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.Country) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/add_country',
        request,
        metadata || {},
        this.methodDescriptoradd_country,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/add_country',
    request,
    metadata || {},
    this.methodDescriptoradd_country);
  }

  methodDescriptordelete_country = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/delete_country',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  delete_country(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  delete_country(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  delete_country(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/delete_country',
        request,
        metadata || {},
        this.methodDescriptordelete_country,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/delete_country',
    request,
    metadata || {},
    this.methodDescriptordelete_country);
  }

  methodDescriptorget_colleges_for_country = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/get_colleges_for_country',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    auth_pb.GetCollegesResponse,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    auth_pb.GetCollegesResponse.deserializeBinary
  );

  get_colleges_for_country(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.GetCollegesResponse>;

  get_colleges_for_country(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.GetCollegesResponse) => void): grpcWeb.ClientReadableStream<auth_pb.GetCollegesResponse>;

  get_colleges_for_country(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.GetCollegesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/get_colleges_for_country',
        request,
        metadata || {},
        this.methodDescriptorget_colleges_for_country,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/get_colleges_for_country',
    request,
    metadata || {},
    this.methodDescriptorget_colleges_for_country);
  }

  methodDescriptorget_college_by_id = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/get_college_by_id',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    auth_pb.College,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    auth_pb.College.deserializeBinary
  );

  get_college_by_id(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.College>;

  get_college_by_id(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.College) => void): grpcWeb.ClientReadableStream<auth_pb.College>;

  get_college_by_id(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.College) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/get_college_by_id',
        request,
        metadata || {},
        this.methodDescriptorget_college_by_id,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/get_college_by_id',
    request,
    metadata || {},
    this.methodDescriptorget_college_by_id);
  }

  methodDescriptoradd_college = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/add_college',
    grpcWeb.MethodType.UNARY,
    auth_pb.College,
    auth_pb.College,
    (request: auth_pb.College) => {
      return request.serializeBinary();
    },
    auth_pb.College.deserializeBinary
  );

  add_college(
    request: auth_pb.College,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.College>;

  add_college(
    request: auth_pb.College,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.College) => void): grpcWeb.ClientReadableStream<auth_pb.College>;

  add_college(
    request: auth_pb.College,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.College) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/add_college',
        request,
        metadata || {},
        this.methodDescriptoradd_college,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/add_college',
    request,
    metadata || {},
    this.methodDescriptoradd_college);
  }

  methodDescriptordelete_college = new grpcWeb.MethodDescriptor(
    '/qreeket.AuthService/delete_college',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  delete_college(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  delete_college(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  delete_college(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AuthService/delete_college',
        request,
        metadata || {},
        this.methodDescriptordelete_college,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AuthService/delete_college',
    request,
    metadata || {},
    this.methodDescriptordelete_college);
  }

}

