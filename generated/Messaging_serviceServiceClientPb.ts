/**
 * @fileoverview gRPC-Web generated client stub for qreeket
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.15.8
// source: messaging_service.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';
import * as google_protobuf_wrappers_pb from 'google-protobuf/google/protobuf/wrappers_pb';
import * as messaging_pb from './messaging_pb';


export class MessagingServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorsendMessage = new grpcWeb.MethodDescriptor(
    '/qreeket.MessagingService/sendMessage',
    grpcWeb.MethodType.UNARY,
    messaging_pb.MessageListItem,
    messaging_pb.MessageListItem,
    (request: messaging_pb.MessageListItem) => {
      return request.serializeBinary();
    },
    messaging_pb.MessageListItem.deserializeBinary
  );

  sendMessage(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null): Promise<messaging_pb.MessageListItem>;

  sendMessage(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void): grpcWeb.ClientReadableStream<messaging_pb.MessageListItem>;

  sendMessage(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.MessagingService/sendMessage',
        request,
        metadata || {},
        this.methodDescriptorsendMessage,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.MessagingService/sendMessage',
    request,
    metadata || {},
    this.methodDescriptorsendMessage);
  }

  methodDescriptordeleteMessage = new grpcWeb.MethodDescriptor(
    '/qreeket.MessagingService/deleteMessage',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  deleteMessage(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  deleteMessage(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  deleteMessage(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.MessagingService/deleteMessage',
        request,
        metadata || {},
        this.methodDescriptordeleteMessage,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.MessagingService/deleteMessage',
    request,
    metadata || {},
    this.methodDescriptordeleteMessage);
  }

  methodDescriptorgetMessages = new grpcWeb.MethodDescriptor(
    '/qreeket.MessagingService/getMessages',
    grpcWeb.MethodType.SERVER_STREAMING,
    messaging_pb.GetMessagesRequest,
    messaging_pb.MessageList,
    (request: messaging_pb.GetMessagesRequest) => {
      return request.serializeBinary();
    },
    messaging_pb.MessageList.deserializeBinary
  );

  getMessages(
    request: messaging_pb.GetMessagesRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<messaging_pb.MessageList> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/qreeket.MessagingService/getMessages',
      request,
      metadata || {},
      this.methodDescriptorgetMessages);
  }

  methodDescriptoreditMessage = new grpcWeb.MethodDescriptor(
    '/qreeket.MessagingService/editMessage',
    grpcWeb.MethodType.UNARY,
    messaging_pb.MessageListItem,
    messaging_pb.MessageListItem,
    (request: messaging_pb.MessageListItem) => {
      return request.serializeBinary();
    },
    messaging_pb.MessageListItem.deserializeBinary
  );

  editMessage(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null): Promise<messaging_pb.MessageListItem>;

  editMessage(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void): grpcWeb.ClientReadableStream<messaging_pb.MessageListItem>;

  editMessage(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.MessagingService/editMessage',
        request,
        metadata || {},
        this.methodDescriptoreditMessage,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.MessagingService/editMessage',
    request,
    metadata || {},
    this.methodDescriptoreditMessage);
  }

  methodDescriptorreactToMessage = new grpcWeb.MethodDescriptor(
    '/qreeket.MessagingService/reactToMessage',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    messaging_pb.MessageListItem,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    messaging_pb.MessageListItem.deserializeBinary
  );

  reactToMessage(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<messaging_pb.MessageListItem>;

  reactToMessage(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void): grpcWeb.ClientReadableStream<messaging_pb.MessageListItem>;

  reactToMessage(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.MessagingService/reactToMessage',
        request,
        metadata || {},
        this.methodDescriptorreactToMessage,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.MessagingService/reactToMessage',
    request,
    metadata || {},
    this.methodDescriptorreactToMessage);
  }

  methodDescriptorcreateThread = new grpcWeb.MethodDescriptor(
    '/qreeket.MessagingService/createThread',
    grpcWeb.MethodType.UNARY,
    messaging_pb.MessageListItem,
    messaging_pb.MessageListItem,
    (request: messaging_pb.MessageListItem) => {
      return request.serializeBinary();
    },
    messaging_pb.MessageListItem.deserializeBinary
  );

  createThread(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null): Promise<messaging_pb.MessageListItem>;

  createThread(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void): grpcWeb.ClientReadableStream<messaging_pb.MessageListItem>;

  createThread(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.MessagingService/createThread',
        request,
        metadata || {},
        this.methodDescriptorcreateThread,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.MessagingService/createThread',
    request,
    metadata || {},
    this.methodDescriptorcreateThread);
  }

  methodDescriptordeleteThread = new grpcWeb.MethodDescriptor(
    '/qreeket.MessagingService/deleteThread',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  deleteThread(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  deleteThread(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  deleteThread(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.MessagingService/deleteThread',
        request,
        metadata || {},
        this.methodDescriptordeleteThread,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.MessagingService/deleteThread',
    request,
    metadata || {},
    this.methodDescriptordeleteThread);
  }

  methodDescriptorgetThreads = new grpcWeb.MethodDescriptor(
    '/qreeket.MessagingService/getThreads',
    grpcWeb.MethodType.SERVER_STREAMING,
    messaging_pb.GetMessagesRequest,
    messaging_pb.MessageList,
    (request: messaging_pb.GetMessagesRequest) => {
      return request.serializeBinary();
    },
    messaging_pb.MessageList.deserializeBinary
  );

  getThreads(
    request: messaging_pb.GetMessagesRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<messaging_pb.MessageList> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/qreeket.MessagingService/getThreads',
      request,
      metadata || {},
      this.methodDescriptorgetThreads);
  }

  methodDescriptoreditThread = new grpcWeb.MethodDescriptor(
    '/qreeket.MessagingService/editThread',
    grpcWeb.MethodType.UNARY,
    messaging_pb.MessageListItem,
    messaging_pb.MessageListItem,
    (request: messaging_pb.MessageListItem) => {
      return request.serializeBinary();
    },
    messaging_pb.MessageListItem.deserializeBinary
  );

  editThread(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null): Promise<messaging_pb.MessageListItem>;

  editThread(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void): grpcWeb.ClientReadableStream<messaging_pb.MessageListItem>;

  editThread(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.MessagingService/editThread',
        request,
        metadata || {},
        this.methodDescriptoreditThread,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.MessagingService/editThread',
    request,
    metadata || {},
    this.methodDescriptoreditThread);
  }

  methodDescriptorreactToThread = new grpcWeb.MethodDescriptor(
    '/qreeket.MessagingService/reactToThread',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    messaging_pb.MessageListItem,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    messaging_pb.MessageListItem.deserializeBinary
  );

  reactToThread(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<messaging_pb.MessageListItem>;

  reactToThread(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void): grpcWeb.ClientReadableStream<messaging_pb.MessageListItem>;

  reactToThread(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.MessagingService/reactToThread',
        request,
        metadata || {},
        this.methodDescriptorreactToThread,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.MessagingService/reactToThread',
    request,
    metadata || {},
    this.methodDescriptorreactToThread);
  }

  methodDescriptorgetDirectMessengers = new grpcWeb.MethodDescriptor(
    '/qreeket.MessagingService/getDirectMessengers',
    grpcWeb.MethodType.SERVER_STREAMING,
    google_protobuf_empty_pb.Empty,
    messaging_pb.DirectMessengerList,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    messaging_pb.DirectMessengerList.deserializeBinary
  );

  getDirectMessengers(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<messaging_pb.DirectMessengerList> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/qreeket.MessagingService/getDirectMessengers',
      request,
      metadata || {},
      this.methodDescriptorgetDirectMessengers);
  }

  methodDescriptorgetDirectMessages = new grpcWeb.MethodDescriptor(
    '/qreeket.MessagingService/getDirectMessages',
    grpcWeb.MethodType.SERVER_STREAMING,
    messaging_pb.GetMessagesRequest,
    messaging_pb.MessageList,
    (request: messaging_pb.GetMessagesRequest) => {
      return request.serializeBinary();
    },
    messaging_pb.MessageList.deserializeBinary
  );

  getDirectMessages(
    request: messaging_pb.GetMessagesRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<messaging_pb.MessageList> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/qreeket.MessagingService/getDirectMessages',
      request,
      metadata || {},
      this.methodDescriptorgetDirectMessages);
  }

  methodDescriptoraddDirectMessenger = new grpcWeb.MethodDescriptor(
    '/qreeket.MessagingService/addDirectMessenger',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    messaging_pb.DirectMessenger,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    messaging_pb.DirectMessenger.deserializeBinary
  );

  addDirectMessenger(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<messaging_pb.DirectMessenger>;

  addDirectMessenger(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: messaging_pb.DirectMessenger) => void): grpcWeb.ClientReadableStream<messaging_pb.DirectMessenger>;

  addDirectMessenger(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: messaging_pb.DirectMessenger) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.MessagingService/addDirectMessenger',
        request,
        metadata || {},
        this.methodDescriptoraddDirectMessenger,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.MessagingService/addDirectMessenger',
    request,
    metadata || {},
    this.methodDescriptoraddDirectMessenger);
  }

  methodDescriptorremoveDirectMessenger = new grpcWeb.MethodDescriptor(
    '/qreeket.MessagingService/removeDirectMessenger',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  removeDirectMessenger(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  removeDirectMessenger(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  removeDirectMessenger(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.MessagingService/removeDirectMessenger',
        request,
        metadata || {},
        this.methodDescriptorremoveDirectMessenger,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.MessagingService/removeDirectMessenger',
    request,
    metadata || {},
    this.methodDescriptorremoveDirectMessenger);
  }

}

