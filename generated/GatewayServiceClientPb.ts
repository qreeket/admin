/**
 * @fileoverview gRPC-Web generated client stub for qreeket
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.15.8
// source: gateway.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as google_protobuf_duration_pb from 'google-protobuf/google/protobuf/duration_pb';
import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';
import * as google_protobuf_wrappers_pb from 'google-protobuf/google/protobuf/wrappers_pb';
import * as auth_pb from './auth_pb';
import * as announcement_pb from './announcement_pb';
import * as group_pb from './group_pb';
import * as billing_pb from './billing_pb';
import * as messaging_pb from './messaging_pb';
import * as media_pb from './media_pb';
import * as sms_pb from './sms_pb';


export class QreeketGatewayServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetAnnouncements = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/GetAnnouncements',
    grpcWeb.MethodType.SERVER_STREAMING,
    google_protobuf_empty_pb.Empty,
    announcement_pb.AnnouncementsList,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    announcement_pb.AnnouncementsList.deserializeBinary
  );

  getAnnouncements(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<announcement_pb.AnnouncementsList> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/qreeket.QreeketGatewayService/GetAnnouncements',
      request,
      metadata || {},
      this.methodDescriptorGetAnnouncements);
  }

  methodDescriptorGetAnnouncement = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/GetAnnouncement',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    announcement_pb.Announcement,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    announcement_pb.Announcement.deserializeBinary
  );

  getAnnouncement(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<announcement_pb.Announcement>;

  getAnnouncement(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: announcement_pb.Announcement) => void): grpcWeb.ClientReadableStream<announcement_pb.Announcement>;

  getAnnouncement(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: announcement_pb.Announcement) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/GetAnnouncement',
        request,
        metadata || {},
        this.methodDescriptorGetAnnouncement,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/GetAnnouncement',
    request,
    metadata || {},
    this.methodDescriptorGetAnnouncement);
  }

  methodDescriptorCreateAnnouncement = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/CreateAnnouncement',
    grpcWeb.MethodType.UNARY,
    announcement_pb.CreateAnnouncementRequest,
    announcement_pb.Announcement,
    (request: announcement_pb.CreateAnnouncementRequest) => {
      return request.serializeBinary();
    },
    announcement_pb.Announcement.deserializeBinary
  );

  createAnnouncement(
    request: announcement_pb.CreateAnnouncementRequest,
    metadata: grpcWeb.Metadata | null): Promise<announcement_pb.Announcement>;

  createAnnouncement(
    request: announcement_pb.CreateAnnouncementRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: announcement_pb.Announcement) => void): grpcWeb.ClientReadableStream<announcement_pb.Announcement>;

  createAnnouncement(
    request: announcement_pb.CreateAnnouncementRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: announcement_pb.Announcement) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/CreateAnnouncement',
        request,
        metadata || {},
        this.methodDescriptorCreateAnnouncement,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/CreateAnnouncement',
    request,
    metadata || {},
    this.methodDescriptorCreateAnnouncement);
  }

  methodDescriptorUpdateAnnouncement = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/UpdateAnnouncement',
    grpcWeb.MethodType.UNARY,
    announcement_pb.UpdateAnnouncementRequest,
    announcement_pb.Announcement,
    (request: announcement_pb.UpdateAnnouncementRequest) => {
      return request.serializeBinary();
    },
    announcement_pb.Announcement.deserializeBinary
  );

  updateAnnouncement(
    request: announcement_pb.UpdateAnnouncementRequest,
    metadata: grpcWeb.Metadata | null): Promise<announcement_pb.Announcement>;

  updateAnnouncement(
    request: announcement_pb.UpdateAnnouncementRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: announcement_pb.Announcement) => void): grpcWeb.ClientReadableStream<announcement_pb.Announcement>;

  updateAnnouncement(
    request: announcement_pb.UpdateAnnouncementRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: announcement_pb.Announcement) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/UpdateAnnouncement',
        request,
        metadata || {},
        this.methodDescriptorUpdateAnnouncement,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/UpdateAnnouncement',
    request,
    metadata || {},
    this.methodDescriptorUpdateAnnouncement);
  }

  methodDescriptorDeleteAnnouncement = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/DeleteAnnouncement',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  deleteAnnouncement(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  deleteAnnouncement(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  deleteAnnouncement(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/DeleteAnnouncement',
        request,
        metadata || {},
        this.methodDescriptorDeleteAnnouncement,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/DeleteAnnouncement',
    request,
    metadata || {},
    this.methodDescriptorDeleteAnnouncement);
  }

  methodDescriptorSubscribeToAnnouncements = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/SubscribeToAnnouncements',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  subscribeToAnnouncements(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  subscribeToAnnouncements(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  subscribeToAnnouncements(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/SubscribeToAnnouncements',
        request,
        metadata || {},
        this.methodDescriptorSubscribeToAnnouncements,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/SubscribeToAnnouncements',
    request,
    metadata || {},
    this.methodDescriptorSubscribeToAnnouncements);
  }

  methodDescriptorUnsubscribeFromAnnouncements = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/UnsubscribeFromAnnouncements',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  unsubscribeFromAnnouncements(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  unsubscribeFromAnnouncements(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  unsubscribeFromAnnouncements(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/UnsubscribeFromAnnouncements',
        request,
        metadata || {},
        this.methodDescriptorUnsubscribeFromAnnouncements,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/UnsubscribeFromAnnouncements',
    request,
    metadata || {},
    this.methodDescriptorUnsubscribeFromAnnouncements);
  }

  methodDescriptorlogin = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/login',
    grpcWeb.MethodType.UNARY,
    auth_pb.LoginRequest,
    google_protobuf_wrappers_pb.StringValue,
    (request: auth_pb.LoginRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_wrappers_pb.StringValue.deserializeBinary
  );

  login(
    request: auth_pb.LoginRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_wrappers_pb.StringValue>;

  login(
    request: auth_pb.LoginRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void): grpcWeb.ClientReadableStream<google_protobuf_wrappers_pb.StringValue>;

  login(
    request: auth_pb.LoginRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/login',
        request,
        metadata || {},
        this.methodDescriptorlogin,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/login',
    request,
    metadata || {},
    this.methodDescriptorlogin);
  }

  methodDescriptorregister = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/register',
    grpcWeb.MethodType.UNARY,
    auth_pb.RegisterRequest,
    google_protobuf_wrappers_pb.StringValue,
    (request: auth_pb.RegisterRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_wrappers_pb.StringValue.deserializeBinary
  );

  register(
    request: auth_pb.RegisterRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_wrappers_pb.StringValue>;

  register(
    request: auth_pb.RegisterRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void): grpcWeb.ClientReadableStream<google_protobuf_wrappers_pb.StringValue>;

  register(
    request: auth_pb.RegisterRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/register',
        request,
        metadata || {},
        this.methodDescriptorregister,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/register',
    request,
    metadata || {},
    this.methodDescriptorregister);
  }

  methodDescriptorreset_password = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/reset_password',
    grpcWeb.MethodType.UNARY,
    auth_pb.ResetPasswordRequest,
    google_protobuf_wrappers_pb.StringValue,
    (request: auth_pb.ResetPasswordRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_wrappers_pb.StringValue.deserializeBinary
  );

  reset_password(
    request: auth_pb.ResetPasswordRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_wrappers_pb.StringValue>;

  reset_password(
    request: auth_pb.ResetPasswordRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void): grpcWeb.ClientReadableStream<google_protobuf_wrappers_pb.StringValue>;

  reset_password(
    request: auth_pb.ResetPasswordRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/reset_password',
        request,
        metadata || {},
        this.methodDescriptorreset_password,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/reset_password',
    request,
    metadata || {},
    this.methodDescriptorreset_password);
  }

  methodDescriptorrequest_password_reset = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/request_password_reset',
    grpcWeb.MethodType.UNARY,
    auth_pb.RequestPasswordResetRequest,
    google_protobuf_wrappers_pb.StringValue,
    (request: auth_pb.RequestPasswordResetRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_wrappers_pb.StringValue.deserializeBinary
  );

  request_password_reset(
    request: auth_pb.RequestPasswordResetRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_wrappers_pb.StringValue>;

  request_password_reset(
    request: auth_pb.RequestPasswordResetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void): grpcWeb.ClientReadableStream<google_protobuf_wrappers_pb.StringValue>;

  request_password_reset(
    request: auth_pb.RequestPasswordResetRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/request_password_reset',
        request,
        metadata || {},
        this.methodDescriptorrequest_password_reset,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/request_password_reset',
    request,
    metadata || {},
    this.methodDescriptorrequest_password_reset);
  }

  methodDescriptorlogout = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/logout',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  logout(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  logout(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  logout(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/logout',
        request,
        metadata || {},
        this.methodDescriptorlogout,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/logout',
    request,
    metadata || {},
    this.methodDescriptorlogout);
  }

  methodDescriptorverify_password = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/verify_password',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  verify_password(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  verify_password(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  verify_password(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/verify_password',
        request,
        metadata || {},
        this.methodDescriptorverify_password,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/verify_password',
    request,
    metadata || {},
    this.methodDescriptorverify_password);
  }

  methodDescriptorupgrade_to_premium = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/upgrade_to_premium',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  upgrade_to_premium(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  upgrade_to_premium(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  upgrade_to_premium(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/upgrade_to_premium',
        request,
        metadata || {},
        this.methodDescriptorupgrade_to_premium,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/upgrade_to_premium',
    request,
    metadata || {},
    this.methodDescriptorupgrade_to_premium);
  }

  methodDescriptordowngrade_to_standard = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/downgrade_to_standard',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  downgrade_to_standard(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  downgrade_to_standard(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  downgrade_to_standard(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/downgrade_to_standard',
        request,
        metadata || {},
        this.methodDescriptordowngrade_to_standard,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/downgrade_to_standard',
    request,
    metadata || {},
    this.methodDescriptordowngrade_to_standard);
  }

  methodDescriptorrequest_public_access_token = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/request_public_access_token',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    google_protobuf_wrappers_pb.StringValue,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    google_protobuf_wrappers_pb.StringValue.deserializeBinary
  );

  request_public_access_token(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_wrappers_pb.StringValue>;

  request_public_access_token(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void): grpcWeb.ClientReadableStream<google_protobuf_wrappers_pb.StringValue>;

  request_public_access_token(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/request_public_access_token',
        request,
        metadata || {},
        this.methodDescriptorrequest_public_access_token,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/request_public_access_token',
    request,
    metadata || {},
    this.methodDescriptorrequest_public_access_token);
  }

  methodDescriptorvalidate_access_token = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/validate_access_token',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    auth_pb.ValidateAccessTokenResponse,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    auth_pb.ValidateAccessTokenResponse.deserializeBinary
  );

  validate_access_token(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.ValidateAccessTokenResponse>;

  validate_access_token(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.ValidateAccessTokenResponse) => void): grpcWeb.ClientReadableStream<auth_pb.ValidateAccessTokenResponse>;

  validate_access_token(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.ValidateAccessTokenResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/validate_access_token',
        request,
        metadata || {},
        this.methodDescriptorvalidate_access_token,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/validate_access_token',
    request,
    metadata || {},
    this.methodDescriptorvalidate_access_token);
  }

  methodDescriptorget_account = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/get_account',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    auth_pb.Account,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    auth_pb.Account.deserializeBinary
  );

  get_account(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.Account>;

  get_account(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.Account) => void): grpcWeb.ClientReadableStream<auth_pb.Account>;

  get_account(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.Account) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/get_account',
        request,
        metadata || {},
        this.methodDescriptorget_account,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/get_account',
    request,
    metadata || {},
    this.methodDescriptorget_account);
  }

  methodDescriptorget_account_by_phone_number = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/get_account_by_phone_number',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    auth_pb.Account,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    auth_pb.Account.deserializeBinary
  );

  get_account_by_phone_number(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.Account>;

  get_account_by_phone_number(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.Account) => void): grpcWeb.ClientReadableStream<auth_pb.Account>;

  get_account_by_phone_number(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.Account) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/get_account_by_phone_number',
        request,
        metadata || {},
        this.methodDescriptorget_account_by_phone_number,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/get_account_by_phone_number',
    request,
    metadata || {},
    this.methodDescriptorget_account_by_phone_number);
  }

  methodDescriptorget_account_by_id = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/get_account_by_id',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    auth_pb.Account,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    auth_pb.Account.deserializeBinary
  );

  get_account_by_id(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.Account>;

  get_account_by_id(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.Account) => void): grpcWeb.ClientReadableStream<auth_pb.Account>;

  get_account_by_id(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.Account) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/get_account_by_id',
        request,
        metadata || {},
        this.methodDescriptorget_account_by_id,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/get_account_by_id',
    request,
    metadata || {},
    this.methodDescriptorget_account_by_id);
  }

  methodDescriptorupdate_account = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/update_account',
    grpcWeb.MethodType.UNARY,
    auth_pb.Account,
    auth_pb.Account,
    (request: auth_pb.Account) => {
      return request.serializeBinary();
    },
    auth_pb.Account.deserializeBinary
  );

  update_account(
    request: auth_pb.Account,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.Account>;

  update_account(
    request: auth_pb.Account,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.Account) => void): grpcWeb.ClientReadableStream<auth_pb.Account>;

  update_account(
    request: auth_pb.Account,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.Account) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/update_account',
        request,
        metadata || {},
        this.methodDescriptorupdate_account,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/update_account',
    request,
    metadata || {},
    this.methodDescriptorupdate_account);
  }

  methodDescriptordelete_account = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/delete_account',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  delete_account(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  delete_account(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  delete_account(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/delete_account',
        request,
        metadata || {},
        this.methodDescriptordelete_account,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/delete_account',
    request,
    metadata || {},
    this.methodDescriptordelete_account);
  }

  methodDescriptorauthenticate_account = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/authenticate_account',
    grpcWeb.MethodType.UNARY,
    auth_pb.AuthenticateWithSocialAccountRequest,
    google_protobuf_wrappers_pb.StringValue,
    (request: auth_pb.AuthenticateWithSocialAccountRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_wrappers_pb.StringValue.deserializeBinary
  );

  authenticate_account(
    request: auth_pb.AuthenticateWithSocialAccountRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_wrappers_pb.StringValue>;

  authenticate_account(
    request: auth_pb.AuthenticateWithSocialAccountRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void): grpcWeb.ClientReadableStream<google_protobuf_wrappers_pb.StringValue>;

  authenticate_account(
    request: auth_pb.AuthenticateWithSocialAccountRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/authenticate_account',
        request,
        metadata || {},
        this.methodDescriptorauthenticate_account,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/authenticate_account',
    request,
    metadata || {},
    this.methodDescriptorauthenticate_account);
  }

  methodDescriptorcheck_email = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/check_email',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  check_email(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  check_email(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  check_email(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/check_email',
        request,
        metadata || {},
        this.methodDescriptorcheck_email,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/check_email',
    request,
    metadata || {},
    this.methodDescriptorcheck_email);
  }

  methodDescriptorcheck_phone_number = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/check_phone_number',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  check_phone_number(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  check_phone_number(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  check_phone_number(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/check_phone_number',
        request,
        metadata || {},
        this.methodDescriptorcheck_phone_number,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/check_phone_number',
    request,
    metadata || {},
    this.methodDescriptorcheck_phone_number);
  }

  methodDescriptorget_countries = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/get_countries',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    auth_pb.GetCountriesResponse,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    auth_pb.GetCountriesResponse.deserializeBinary
  );

  get_countries(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.GetCountriesResponse>;

  get_countries(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.GetCountriesResponse) => void): grpcWeb.ClientReadableStream<auth_pb.GetCountriesResponse>;

  get_countries(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.GetCountriesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/get_countries',
        request,
        metadata || {},
        this.methodDescriptorget_countries,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/get_countries',
    request,
    metadata || {},
    this.methodDescriptorget_countries);
  }

  methodDescriptorget_country_by_id = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/get_country_by_id',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    auth_pb.Country,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    auth_pb.Country.deserializeBinary
  );

  get_country_by_id(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.Country>;

  get_country_by_id(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.Country) => void): grpcWeb.ClientReadableStream<auth_pb.Country>;

  get_country_by_id(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.Country) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/get_country_by_id',
        request,
        metadata || {},
        this.methodDescriptorget_country_by_id,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/get_country_by_id',
    request,
    metadata || {},
    this.methodDescriptorget_country_by_id);
  }

  methodDescriptoradd_country = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/add_country',
    grpcWeb.MethodType.UNARY,
    auth_pb.Country,
    auth_pb.Country,
    (request: auth_pb.Country) => {
      return request.serializeBinary();
    },
    auth_pb.Country.deserializeBinary
  );

  add_country(
    request: auth_pb.Country,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.Country>;

  add_country(
    request: auth_pb.Country,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.Country) => void): grpcWeb.ClientReadableStream<auth_pb.Country>;

  add_country(
    request: auth_pb.Country,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.Country) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/add_country',
        request,
        metadata || {},
        this.methodDescriptoradd_country,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/add_country',
    request,
    metadata || {},
    this.methodDescriptoradd_country);
  }

  methodDescriptordelete_country = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/delete_country',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  delete_country(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  delete_country(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  delete_country(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/delete_country',
        request,
        metadata || {},
        this.methodDescriptordelete_country,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/delete_country',
    request,
    metadata || {},
    this.methodDescriptordelete_country);
  }

  methodDescriptorget_colleges_for_country = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/get_colleges_for_country',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    auth_pb.GetCollegesResponse,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    auth_pb.GetCollegesResponse.deserializeBinary
  );

  get_colleges_for_country(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.GetCollegesResponse>;

  get_colleges_for_country(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.GetCollegesResponse) => void): grpcWeb.ClientReadableStream<auth_pb.GetCollegesResponse>;

  get_colleges_for_country(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.GetCollegesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/get_colleges_for_country',
        request,
        metadata || {},
        this.methodDescriptorget_colleges_for_country,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/get_colleges_for_country',
    request,
    metadata || {},
    this.methodDescriptorget_colleges_for_country);
  }

  methodDescriptorget_college_by_id = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/get_college_by_id',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    auth_pb.College,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    auth_pb.College.deserializeBinary
  );

  get_college_by_id(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.College>;

  get_college_by_id(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.College) => void): grpcWeb.ClientReadableStream<auth_pb.College>;

  get_college_by_id(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.College) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/get_college_by_id',
        request,
        metadata || {},
        this.methodDescriptorget_college_by_id,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/get_college_by_id',
    request,
    metadata || {},
    this.methodDescriptorget_college_by_id);
  }

  methodDescriptoradd_college = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/add_college',
    grpcWeb.MethodType.UNARY,
    auth_pb.College,
    auth_pb.College,
    (request: auth_pb.College) => {
      return request.serializeBinary();
    },
    auth_pb.College.deserializeBinary
  );

  add_college(
    request: auth_pb.College,
    metadata: grpcWeb.Metadata | null): Promise<auth_pb.College>;

  add_college(
    request: auth_pb.College,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: auth_pb.College) => void): grpcWeb.ClientReadableStream<auth_pb.College>;

  add_college(
    request: auth_pb.College,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: auth_pb.College) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/add_college',
        request,
        metadata || {},
        this.methodDescriptoradd_college,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/add_college',
    request,
    metadata || {},
    this.methodDescriptoradd_college);
  }

  methodDescriptordelete_college = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/delete_college',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  delete_college(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  delete_college(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  delete_college(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/delete_college',
        request,
        metadata || {},
        this.methodDescriptordelete_college,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/delete_college',
    request,
    metadata || {},
    this.methodDescriptordelete_college);
  }

  methodDescriptorcharge = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/charge',
    grpcWeb.MethodType.UNARY,
    billing_pb.ChargeRequest,
    billing_pb.ChargeResponse,
    (request: billing_pb.ChargeRequest) => {
      return request.serializeBinary();
    },
    billing_pb.ChargeResponse.deserializeBinary
  );

  charge(
    request: billing_pb.ChargeRequest,
    metadata: grpcWeb.Metadata | null): Promise<billing_pb.ChargeResponse>;

  charge(
    request: billing_pb.ChargeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: billing_pb.ChargeResponse) => void): grpcWeb.ClientReadableStream<billing_pb.ChargeResponse>;

  charge(
    request: billing_pb.ChargeRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: billing_pb.ChargeResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/charge',
        request,
        metadata || {},
        this.methodDescriptorcharge,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/charge',
    request,
    metadata || {},
    this.methodDescriptorcharge);
  }

  methodDescriptorget_transaction = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/get_transaction',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    billing_pb.Transaction,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    billing_pb.Transaction.deserializeBinary
  );

  get_transaction(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<billing_pb.Transaction>;

  get_transaction(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: billing_pb.Transaction) => void): grpcWeb.ClientReadableStream<billing_pb.Transaction>;

  get_transaction(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: billing_pb.Transaction) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/get_transaction',
        request,
        metadata || {},
        this.methodDescriptorget_transaction,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/get_transaction',
    request,
    metadata || {},
    this.methodDescriptorget_transaction);
  }

  methodDescriptorlist_transactions = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/list_transactions',
    grpcWeb.MethodType.UNARY,
    google_protobuf_duration_pb.Duration,
    billing_pb.ListTransactionsResponse,
    (request: google_protobuf_duration_pb.Duration) => {
      return request.serializeBinary();
    },
    billing_pb.ListTransactionsResponse.deserializeBinary
  );

  list_transactions(
    request: google_protobuf_duration_pb.Duration,
    metadata: grpcWeb.Metadata | null): Promise<billing_pb.ListTransactionsResponse>;

  list_transactions(
    request: google_protobuf_duration_pb.Duration,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: billing_pb.ListTransactionsResponse) => void): grpcWeb.ClientReadableStream<billing_pb.ListTransactionsResponse>;

  list_transactions(
    request: google_protobuf_duration_pb.Duration,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: billing_pb.ListTransactionsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/list_transactions',
        request,
        metadata || {},
        this.methodDescriptorlist_transactions,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/list_transactions',
    request,
    metadata || {},
    this.methodDescriptorlist_transactions);
  }

  methodDescriptordelete_transaction = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/delete_transaction',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  delete_transaction(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  delete_transaction(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  delete_transaction(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/delete_transaction',
        request,
        metadata || {},
        this.methodDescriptordelete_transaction,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/delete_transaction',
    request,
    metadata || {},
    this.methodDescriptordelete_transaction);
  }

  methodDescriptorcreateChannel = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/createChannel',
    grpcWeb.MethodType.UNARY,
    group_pb.CreateChannelRequest,
    group_pb.Channel,
    (request: group_pb.CreateChannelRequest) => {
      return request.serializeBinary();
    },
    group_pb.Channel.deserializeBinary
  );

  createChannel(
    request: group_pb.CreateChannelRequest,
    metadata: grpcWeb.Metadata | null): Promise<group_pb.Channel>;

  createChannel(
    request: group_pb.CreateChannelRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: group_pb.Channel) => void): grpcWeb.ClientReadableStream<group_pb.Channel>;

  createChannel(
    request: group_pb.CreateChannelRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: group_pb.Channel) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/createChannel',
        request,
        metadata || {},
        this.methodDescriptorcreateChannel,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/createChannel',
    request,
    metadata || {},
    this.methodDescriptorcreateChannel);
  }

  methodDescriptorgetChannel = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/getChannel',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    group_pb.Channel,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    group_pb.Channel.deserializeBinary
  );

  getChannel(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<group_pb.Channel>;

  getChannel(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: group_pb.Channel) => void): grpcWeb.ClientReadableStream<group_pb.Channel>;

  getChannel(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: group_pb.Channel) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/getChannel',
        request,
        metadata || {},
        this.methodDescriptorgetChannel,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/getChannel',
    request,
    metadata || {},
    this.methodDescriptorgetChannel);
  }

  methodDescriptorgetChannelsForGroup = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/getChannelsForGroup',
    grpcWeb.MethodType.SERVER_STREAMING,
    google_protobuf_wrappers_pb.StringValue,
    group_pb.ChannelList,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    group_pb.ChannelList.deserializeBinary
  );

  getChannelsForGroup(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<group_pb.ChannelList> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/qreeket.QreeketGatewayService/getChannelsForGroup',
      request,
      metadata || {},
      this.methodDescriptorgetChannelsForGroup);
  }

  methodDescriptorupdateChannel = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/updateChannel',
    grpcWeb.MethodType.UNARY,
    group_pb.Channel,
    group_pb.Channel,
    (request: group_pb.Channel) => {
      return request.serializeBinary();
    },
    group_pb.Channel.deserializeBinary
  );

  updateChannel(
    request: group_pb.Channel,
    metadata: grpcWeb.Metadata | null): Promise<group_pb.Channel>;

  updateChannel(
    request: group_pb.Channel,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: group_pb.Channel) => void): grpcWeb.ClientReadableStream<group_pb.Channel>;

  updateChannel(
    request: group_pb.Channel,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: group_pb.Channel) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/updateChannel',
        request,
        metadata || {},
        this.methodDescriptorupdateChannel,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/updateChannel',
    request,
    metadata || {},
    this.methodDescriptorupdateChannel);
  }

  methodDescriptordeleteChannel = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/deleteChannel',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  deleteChannel(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  deleteChannel(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  deleteChannel(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/deleteChannel',
        request,
        metadata || {},
        this.methodDescriptordeleteChannel,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/deleteChannel',
    request,
    metadata || {},
    this.methodDescriptordeleteChannel);
  }

  methodDescriptorleaveChannel = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/leaveChannel',
    grpcWeb.MethodType.UNARY,
    group_pb.ManageGroupOrChannel,
    google_protobuf_empty_pb.Empty,
    (request: group_pb.ManageGroupOrChannel) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  leaveChannel(
    request: group_pb.ManageGroupOrChannel,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  leaveChannel(
    request: group_pb.ManageGroupOrChannel,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  leaveChannel(
    request: group_pb.ManageGroupOrChannel,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/leaveChannel',
        request,
        metadata || {},
        this.methodDescriptorleaveChannel,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/leaveChannel',
    request,
    metadata || {},
    this.methodDescriptorleaveChannel);
  }

  methodDescriptorsubscribeToChannel = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/subscribeToChannel',
    grpcWeb.MethodType.UNARY,
    group_pb.ChannelSubscriptionRequest,
    google_protobuf_empty_pb.Empty,
    (request: group_pb.ChannelSubscriptionRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  subscribeToChannel(
    request: group_pb.ChannelSubscriptionRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  subscribeToChannel(
    request: group_pb.ChannelSubscriptionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  subscribeToChannel(
    request: group_pb.ChannelSubscriptionRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/subscribeToChannel',
        request,
        metadata || {},
        this.methodDescriptorsubscribeToChannel,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/subscribeToChannel',
    request,
    metadata || {},
    this.methodDescriptorsubscribeToChannel);
  }

  methodDescriptorunsubscribeFromChannel = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/unsubscribeFromChannel',
    grpcWeb.MethodType.UNARY,
    group_pb.ChannelSubscriptionRequest,
    google_protobuf_empty_pb.Empty,
    (request: group_pb.ChannelSubscriptionRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  unsubscribeFromChannel(
    request: group_pb.ChannelSubscriptionRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  unsubscribeFromChannel(
    request: group_pb.ChannelSubscriptionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  unsubscribeFromChannel(
    request: group_pb.ChannelSubscriptionRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/unsubscribeFromChannel',
        request,
        metadata || {},
        this.methodDescriptorunsubscribeFromChannel,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/unsubscribeFromChannel',
    request,
    metadata || {},
    this.methodDescriptorunsubscribeFromChannel);
  }

  methodDescriptormanageChannelSubscription = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/manageChannelSubscription',
    grpcWeb.MethodType.UNARY,
    group_pb.ManageChannelSubscriptionRequest,
    google_protobuf_empty_pb.Empty,
    (request: group_pb.ManageChannelSubscriptionRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  manageChannelSubscription(
    request: group_pb.ManageChannelSubscriptionRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  manageChannelSubscription(
    request: group_pb.ManageChannelSubscriptionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  manageChannelSubscription(
    request: group_pb.ManageChannelSubscriptionRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/manageChannelSubscription',
        request,
        metadata || {},
        this.methodDescriptormanageChannelSubscription,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/manageChannelSubscription',
    request,
    metadata || {},
    this.methodDescriptormanageChannelSubscription);
  }

  methodDescriptorgetChannelSubscriptionsForUser = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/getChannelSubscriptionsForUser',
    grpcWeb.MethodType.SERVER_STREAMING,
    google_protobuf_wrappers_pb.StringValue,
    group_pb.ChannelSubscriptionList,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    group_pb.ChannelSubscriptionList.deserializeBinary
  );

  getChannelSubscriptionsForUser(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<group_pb.ChannelSubscriptionList> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/qreeket.QreeketGatewayService/getChannelSubscriptionsForUser',
      request,
      metadata || {},
      this.methodDescriptorgetChannelSubscriptionsForUser);
  }

  methodDescriptormuteChannel = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/muteChannel',
    grpcWeb.MethodType.UNARY,
    group_pb.ManageGroupOrChannelRequest,
    google_protobuf_empty_pb.Empty,
    (request: group_pb.ManageGroupOrChannelRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  muteChannel(
    request: group_pb.ManageGroupOrChannelRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  muteChannel(
    request: group_pb.ManageGroupOrChannelRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  muteChannel(
    request: group_pb.ManageGroupOrChannelRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/muteChannel',
        request,
        metadata || {},
        this.methodDescriptormuteChannel,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/muteChannel',
    request,
    metadata || {},
    this.methodDescriptormuteChannel);
  }

  methodDescriptorunmuteChannel = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/unmuteChannel',
    grpcWeb.MethodType.UNARY,
    group_pb.ManageGroupOrChannelRequest,
    google_protobuf_empty_pb.Empty,
    (request: group_pb.ManageGroupOrChannelRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  unmuteChannel(
    request: group_pb.ManageGroupOrChannelRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  unmuteChannel(
    request: group_pb.ManageGroupOrChannelRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  unmuteChannel(
    request: group_pb.ManageGroupOrChannelRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/unmuteChannel',
        request,
        metadata || {},
        this.methodDescriptorunmuteChannel,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/unmuteChannel',
    request,
    metadata || {},
    this.methodDescriptorunmuteChannel);
  }

  methodDescriptorcreateGroup = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/createGroup',
    grpcWeb.MethodType.UNARY,
    group_pb.CreateGroupRequest,
    group_pb.Group,
    (request: group_pb.CreateGroupRequest) => {
      return request.serializeBinary();
    },
    group_pb.Group.deserializeBinary
  );

  createGroup(
    request: group_pb.CreateGroupRequest,
    metadata: grpcWeb.Metadata | null): Promise<group_pb.Group>;

  createGroup(
    request: group_pb.CreateGroupRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: group_pb.Group) => void): grpcWeb.ClientReadableStream<group_pb.Group>;

  createGroup(
    request: group_pb.CreateGroupRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: group_pb.Group) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/createGroup',
        request,
        metadata || {},
        this.methodDescriptorcreateGroup,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/createGroup',
    request,
    metadata || {},
    this.methodDescriptorcreateGroup);
  }

  methodDescriptorgetGroup = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/getGroup',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    group_pb.Group,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    group_pb.Group.deserializeBinary
  );

  getGroup(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<group_pb.Group>;

  getGroup(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: group_pb.Group) => void): grpcWeb.ClientReadableStream<group_pb.Group>;

  getGroup(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: group_pb.Group) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/getGroup',
        request,
        metadata || {},
        this.methodDescriptorgetGroup,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/getGroup',
    request,
    metadata || {},
    this.methodDescriptorgetGroup);
  }

  methodDescriptorgetGroups = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/getGroups',
    grpcWeb.MethodType.SERVER_STREAMING,
    google_protobuf_wrappers_pb.StringValue,
    group_pb.GroupList,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    group_pb.GroupList.deserializeBinary
  );

  getGroups(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<group_pb.GroupList> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/qreeket.QreeketGatewayService/getGroups',
      request,
      metadata || {},
      this.methodDescriptorgetGroups);
  }

  methodDescriptorupdateGroup = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/updateGroup',
    grpcWeb.MethodType.UNARY,
    group_pb.Group,
    group_pb.Group,
    (request: group_pb.Group) => {
      return request.serializeBinary();
    },
    group_pb.Group.deserializeBinary
  );

  updateGroup(
    request: group_pb.Group,
    metadata: grpcWeb.Metadata | null): Promise<group_pb.Group>;

  updateGroup(
    request: group_pb.Group,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: group_pb.Group) => void): grpcWeb.ClientReadableStream<group_pb.Group>;

  updateGroup(
    request: group_pb.Group,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: group_pb.Group) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/updateGroup',
        request,
        metadata || {},
        this.methodDescriptorupdateGroup,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/updateGroup',
    request,
    metadata || {},
    this.methodDescriptorupdateGroup);
  }

  methodDescriptordeleteGroup = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/deleteGroup',
    grpcWeb.MethodType.UNARY,
    group_pb.DeleteGroupRequest,
    google_protobuf_empty_pb.Empty,
    (request: group_pb.DeleteGroupRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  deleteGroup(
    request: group_pb.DeleteGroupRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  deleteGroup(
    request: group_pb.DeleteGroupRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  deleteGroup(
    request: group_pb.DeleteGroupRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/deleteGroup',
        request,
        metadata || {},
        this.methodDescriptordeleteGroup,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/deleteGroup',
    request,
    metadata || {},
    this.methodDescriptordeleteGroup);
  }

  methodDescriptorleaveGroup = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/leaveGroup',
    grpcWeb.MethodType.UNARY,
    group_pb.ManageGroupOrChannel,
    google_protobuf_empty_pb.Empty,
    (request: group_pb.ManageGroupOrChannel) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  leaveGroup(
    request: group_pb.ManageGroupOrChannel,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  leaveGroup(
    request: group_pb.ManageGroupOrChannel,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  leaveGroup(
    request: group_pb.ManageGroupOrChannel,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/leaveGroup',
        request,
        metadata || {},
        this.methodDescriptorleaveGroup,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/leaveGroup',
    request,
    metadata || {},
    this.methodDescriptorleaveGroup);
  }

  methodDescriptorinviteToGroup = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/inviteToGroup',
    grpcWeb.MethodType.UNARY,
    group_pb.GroupInviteRequest,
    google_protobuf_empty_pb.Empty,
    (request: group_pb.GroupInviteRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  inviteToGroup(
    request: group_pb.GroupInviteRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  inviteToGroup(
    request: group_pb.GroupInviteRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  inviteToGroup(
    request: group_pb.GroupInviteRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/inviteToGroup',
        request,
        metadata || {},
        this.methodDescriptorinviteToGroup,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/inviteToGroup',
    request,
    metadata || {},
    this.methodDescriptorinviteToGroup);
  }

  methodDescriptorgetGroupInvitesForUser = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/getGroupInvitesForUser',
    grpcWeb.MethodType.SERVER_STREAMING,
    google_protobuf_wrappers_pb.StringValue,
    group_pb.GroupInviteList,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    group_pb.GroupInviteList.deserializeBinary
  );

  getGroupInvitesForUser(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<group_pb.GroupInviteList> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/qreeket.QreeketGatewayService/getGroupInvitesForUser',
      request,
      metadata || {},
      this.methodDescriptorgetGroupInvitesForUser);
  }

  methodDescriptorgetGroupInvitesForGroup = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/getGroupInvitesForGroup',
    grpcWeb.MethodType.SERVER_STREAMING,
    google_protobuf_wrappers_pb.StringValue,
    group_pb.GroupInviteList,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    group_pb.GroupInviteList.deserializeBinary
  );

  getGroupInvitesForGroup(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<group_pb.GroupInviteList> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/qreeket.QreeketGatewayService/getGroupInvitesForGroup',
      request,
      metadata || {},
      this.methodDescriptorgetGroupInvitesForGroup);
  }

  methodDescriptorrevokeGroupInvite = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/revokeGroupInvite',
    grpcWeb.MethodType.UNARY,
    group_pb.RevokeGroupInviteRequest,
    google_protobuf_empty_pb.Empty,
    (request: group_pb.RevokeGroupInviteRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  revokeGroupInvite(
    request: group_pb.RevokeGroupInviteRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  revokeGroupInvite(
    request: group_pb.RevokeGroupInviteRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  revokeGroupInvite(
    request: group_pb.RevokeGroupInviteRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/revokeGroupInvite',
        request,
        metadata || {},
        this.methodDescriptorrevokeGroupInvite,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/revokeGroupInvite',
    request,
    metadata || {},
    this.methodDescriptorrevokeGroupInvite);
  }

  methodDescriptormanageGroupInvite = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/manageGroupInvite',
    grpcWeb.MethodType.UNARY,
    group_pb.ManageGroupInviteRequest,
    google_protobuf_empty_pb.Empty,
    (request: group_pb.ManageGroupInviteRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  manageGroupInvite(
    request: group_pb.ManageGroupInviteRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  manageGroupInvite(
    request: group_pb.ManageGroupInviteRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  manageGroupInvite(
    request: group_pb.ManageGroupInviteRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/manageGroupInvite',
        request,
        metadata || {},
        this.methodDescriptormanageGroupInvite,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/manageGroupInvite',
    request,
    metadata || {},
    this.methodDescriptormanageGroupInvite);
  }

  methodDescriptormuteGroup = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/muteGroup',
    grpcWeb.MethodType.UNARY,
    group_pb.ManageGroupOrChannelRequest,
    google_protobuf_empty_pb.Empty,
    (request: group_pb.ManageGroupOrChannelRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  muteGroup(
    request: group_pb.ManageGroupOrChannelRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  muteGroup(
    request: group_pb.ManageGroupOrChannelRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  muteGroup(
    request: group_pb.ManageGroupOrChannelRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/muteGroup',
        request,
        metadata || {},
        this.methodDescriptormuteGroup,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/muteGroup',
    request,
    metadata || {},
    this.methodDescriptormuteGroup);
  }

  methodDescriptorunmuteGroup = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/unmuteGroup',
    grpcWeb.MethodType.UNARY,
    group_pb.ManageGroupOrChannelRequest,
    google_protobuf_empty_pb.Empty,
    (request: group_pb.ManageGroupOrChannelRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  unmuteGroup(
    request: group_pb.ManageGroupOrChannelRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  unmuteGroup(
    request: group_pb.ManageGroupOrChannelRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  unmuteGroup(
    request: group_pb.ManageGroupOrChannelRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/unmuteGroup',
        request,
        metadata || {},
        this.methodDescriptorunmuteGroup,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/unmuteGroup',
    request,
    metadata || {},
    this.methodDescriptorunmuteGroup);
  }

  methodDescriptorpromoteGroupAdmin = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/promoteGroupAdmin',
    grpcWeb.MethodType.UNARY,
    group_pb.ManageAdminRequest,
    google_protobuf_empty_pb.Empty,
    (request: group_pb.ManageAdminRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  promoteGroupAdmin(
    request: group_pb.ManageAdminRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  promoteGroupAdmin(
    request: group_pb.ManageAdminRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  promoteGroupAdmin(
    request: group_pb.ManageAdminRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/promoteGroupAdmin',
        request,
        metadata || {},
        this.methodDescriptorpromoteGroupAdmin,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/promoteGroupAdmin',
    request,
    metadata || {},
    this.methodDescriptorpromoteGroupAdmin);
  }

  methodDescriptordemoteGroupAdmin = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/demoteGroupAdmin',
    grpcWeb.MethodType.UNARY,
    group_pb.ManageAdminRequest,
    google_protobuf_empty_pb.Empty,
    (request: group_pb.ManageAdminRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  demoteGroupAdmin(
    request: group_pb.ManageAdminRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  demoteGroupAdmin(
    request: group_pb.ManageAdminRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  demoteGroupAdmin(
    request: group_pb.ManageAdminRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/demoteGroupAdmin',
        request,
        metadata || {},
        this.methodDescriptordemoteGroupAdmin,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/demoteGroupAdmin',
    request,
    metadata || {},
    this.methodDescriptordemoteGroupAdmin);
  }

  methodDescriptorbanFromGroup = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/banFromGroup',
    grpcWeb.MethodType.UNARY,
    group_pb.ManageGroupOrChannelRequest,
    google_protobuf_empty_pb.Empty,
    (request: group_pb.ManageGroupOrChannelRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  banFromGroup(
    request: group_pb.ManageGroupOrChannelRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  banFromGroup(
    request: group_pb.ManageGroupOrChannelRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  banFromGroup(
    request: group_pb.ManageGroupOrChannelRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/banFromGroup',
        request,
        metadata || {},
        this.methodDescriptorbanFromGroup,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/banFromGroup',
    request,
    metadata || {},
    this.methodDescriptorbanFromGroup);
  }

  methodDescriptorunbanFromGroup = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/unbanFromGroup',
    grpcWeb.MethodType.UNARY,
    group_pb.ManageGroupOrChannelRequest,
    google_protobuf_empty_pb.Empty,
    (request: group_pb.ManageGroupOrChannelRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  unbanFromGroup(
    request: group_pb.ManageGroupOrChannelRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  unbanFromGroup(
    request: group_pb.ManageGroupOrChannelRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  unbanFromGroup(
    request: group_pb.ManageGroupOrChannelRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/unbanFromGroup',
        request,
        metadata || {},
        this.methodDescriptorunbanFromGroup,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/unbanFromGroup',
    request,
    metadata || {},
    this.methodDescriptorunbanFromGroup);
  }

  methodDescriptorupload_media = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/upload_media',
    grpcWeb.MethodType.UNARY,
    media_pb.UploadMediaRequest,
    media_pb.UploadMediaResponse,
    (request: media_pb.UploadMediaRequest) => {
      return request.serializeBinary();
    },
    media_pb.UploadMediaResponse.deserializeBinary
  );

  upload_media(
    request: media_pb.UploadMediaRequest,
    metadata: grpcWeb.Metadata | null): Promise<media_pb.UploadMediaResponse>;

  upload_media(
    request: media_pb.UploadMediaRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: media_pb.UploadMediaResponse) => void): grpcWeb.ClientReadableStream<media_pb.UploadMediaResponse>;

  upload_media(
    request: media_pb.UploadMediaRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: media_pb.UploadMediaResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/upload_media',
        request,
        metadata || {},
        this.methodDescriptorupload_media,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/upload_media',
    request,
    metadata || {},
    this.methodDescriptorupload_media);
  }

  methodDescriptorget_media = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/get_media',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_wrappers_pb.StringValue,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_wrappers_pb.StringValue.deserializeBinary
  );

  get_media(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_wrappers_pb.StringValue>;

  get_media(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void): grpcWeb.ClientReadableStream<google_protobuf_wrappers_pb.StringValue>;

  get_media(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_wrappers_pb.StringValue) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/get_media',
        request,
        metadata || {},
        this.methodDescriptorget_media,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/get_media',
    request,
    metadata || {},
    this.methodDescriptorget_media);
  }

  methodDescriptordelete_media = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/delete_media',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  delete_media(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  delete_media(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  delete_media(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/delete_media',
        request,
        metadata || {},
        this.methodDescriptordelete_media,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/delete_media',
    request,
    metadata || {},
    this.methodDescriptordelete_media);
  }

  methodDescriptorsendMessage = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/sendMessage',
    grpcWeb.MethodType.UNARY,
    messaging_pb.MessageListItem,
    messaging_pb.MessageListItem,
    (request: messaging_pb.MessageListItem) => {
      return request.serializeBinary();
    },
    messaging_pb.MessageListItem.deserializeBinary
  );

  sendMessage(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null): Promise<messaging_pb.MessageListItem>;

  sendMessage(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void): grpcWeb.ClientReadableStream<messaging_pb.MessageListItem>;

  sendMessage(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/sendMessage',
        request,
        metadata || {},
        this.methodDescriptorsendMessage,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/sendMessage',
    request,
    metadata || {},
    this.methodDescriptorsendMessage);
  }

  methodDescriptordeleteMessage = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/deleteMessage',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  deleteMessage(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  deleteMessage(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  deleteMessage(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/deleteMessage',
        request,
        metadata || {},
        this.methodDescriptordeleteMessage,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/deleteMessage',
    request,
    metadata || {},
    this.methodDescriptordeleteMessage);
  }

  methodDescriptorgetMessages = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/getMessages',
    grpcWeb.MethodType.SERVER_STREAMING,
    messaging_pb.GetMessagesRequest,
    messaging_pb.MessageList,
    (request: messaging_pb.GetMessagesRequest) => {
      return request.serializeBinary();
    },
    messaging_pb.MessageList.deserializeBinary
  );

  getMessages(
    request: messaging_pb.GetMessagesRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<messaging_pb.MessageList> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/qreeket.QreeketGatewayService/getMessages',
      request,
      metadata || {},
      this.methodDescriptorgetMessages);
  }

  methodDescriptoreditMessage = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/editMessage',
    grpcWeb.MethodType.UNARY,
    messaging_pb.MessageListItem,
    messaging_pb.MessageListItem,
    (request: messaging_pb.MessageListItem) => {
      return request.serializeBinary();
    },
    messaging_pb.MessageListItem.deserializeBinary
  );

  editMessage(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null): Promise<messaging_pb.MessageListItem>;

  editMessage(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void): grpcWeb.ClientReadableStream<messaging_pb.MessageListItem>;

  editMessage(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/editMessage',
        request,
        metadata || {},
        this.methodDescriptoreditMessage,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/editMessage',
    request,
    metadata || {},
    this.methodDescriptoreditMessage);
  }

  methodDescriptorreactToMessage = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/reactToMessage',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    messaging_pb.MessageListItem,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    messaging_pb.MessageListItem.deserializeBinary
  );

  reactToMessage(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<messaging_pb.MessageListItem>;

  reactToMessage(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void): grpcWeb.ClientReadableStream<messaging_pb.MessageListItem>;

  reactToMessage(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/reactToMessage',
        request,
        metadata || {},
        this.methodDescriptorreactToMessage,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/reactToMessage',
    request,
    metadata || {},
    this.methodDescriptorreactToMessage);
  }

  methodDescriptorcreateThread = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/createThread',
    grpcWeb.MethodType.UNARY,
    messaging_pb.MessageListItem,
    messaging_pb.MessageListItem,
    (request: messaging_pb.MessageListItem) => {
      return request.serializeBinary();
    },
    messaging_pb.MessageListItem.deserializeBinary
  );

  createThread(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null): Promise<messaging_pb.MessageListItem>;

  createThread(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void): grpcWeb.ClientReadableStream<messaging_pb.MessageListItem>;

  createThread(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/createThread',
        request,
        metadata || {},
        this.methodDescriptorcreateThread,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/createThread',
    request,
    metadata || {},
    this.methodDescriptorcreateThread);
  }

  methodDescriptordeleteThread = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/deleteThread',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  deleteThread(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  deleteThread(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  deleteThread(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/deleteThread',
        request,
        metadata || {},
        this.methodDescriptordeleteThread,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/deleteThread',
    request,
    metadata || {},
    this.methodDescriptordeleteThread);
  }

  methodDescriptorgetThreads = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/getThreads',
    grpcWeb.MethodType.SERVER_STREAMING,
    messaging_pb.GetMessagesRequest,
    messaging_pb.MessageList,
    (request: messaging_pb.GetMessagesRequest) => {
      return request.serializeBinary();
    },
    messaging_pb.MessageList.deserializeBinary
  );

  getThreads(
    request: messaging_pb.GetMessagesRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<messaging_pb.MessageList> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/qreeket.QreeketGatewayService/getThreads',
      request,
      metadata || {},
      this.methodDescriptorgetThreads);
  }

  methodDescriptoreditThread = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/editThread',
    grpcWeb.MethodType.UNARY,
    messaging_pb.MessageListItem,
    messaging_pb.MessageListItem,
    (request: messaging_pb.MessageListItem) => {
      return request.serializeBinary();
    },
    messaging_pb.MessageListItem.deserializeBinary
  );

  editThread(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null): Promise<messaging_pb.MessageListItem>;

  editThread(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void): grpcWeb.ClientReadableStream<messaging_pb.MessageListItem>;

  editThread(
    request: messaging_pb.MessageListItem,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/editThread',
        request,
        metadata || {},
        this.methodDescriptoreditThread,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/editThread',
    request,
    metadata || {},
    this.methodDescriptoreditThread);
  }

  methodDescriptorreactToThread = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/reactToThread',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    messaging_pb.MessageListItem,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    messaging_pb.MessageListItem.deserializeBinary
  );

  reactToThread(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<messaging_pb.MessageListItem>;

  reactToThread(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void): grpcWeb.ClientReadableStream<messaging_pb.MessageListItem>;

  reactToThread(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: messaging_pb.MessageListItem) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/reactToThread',
        request,
        metadata || {},
        this.methodDescriptorreactToThread,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/reactToThread',
    request,
    metadata || {},
    this.methodDescriptorreactToThread);
  }

  methodDescriptorgetDirectMessengers = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/getDirectMessengers',
    grpcWeb.MethodType.SERVER_STREAMING,
    google_protobuf_empty_pb.Empty,
    messaging_pb.DirectMessengerList,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    messaging_pb.DirectMessengerList.deserializeBinary
  );

  getDirectMessengers(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<messaging_pb.DirectMessengerList> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/qreeket.QreeketGatewayService/getDirectMessengers',
      request,
      metadata || {},
      this.methodDescriptorgetDirectMessengers);
  }

  methodDescriptorgetDirectMessages = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/getDirectMessages',
    grpcWeb.MethodType.SERVER_STREAMING,
    messaging_pb.GetMessagesRequest,
    messaging_pb.MessageList,
    (request: messaging_pb.GetMessagesRequest) => {
      return request.serializeBinary();
    },
    messaging_pb.MessageList.deserializeBinary
  );

  getDirectMessages(
    request: messaging_pb.GetMessagesRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<messaging_pb.MessageList> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/qreeket.QreeketGatewayService/getDirectMessages',
      request,
      metadata || {},
      this.methodDescriptorgetDirectMessages);
  }

  methodDescriptoraddDirectMessenger = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/addDirectMessenger',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    messaging_pb.DirectMessenger,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    messaging_pb.DirectMessenger.deserializeBinary
  );

  addDirectMessenger(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<messaging_pb.DirectMessenger>;

  addDirectMessenger(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: messaging_pb.DirectMessenger) => void): grpcWeb.ClientReadableStream<messaging_pb.DirectMessenger>;

  addDirectMessenger(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: messaging_pb.DirectMessenger) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/addDirectMessenger',
        request,
        metadata || {},
        this.methodDescriptoraddDirectMessenger,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/addDirectMessenger',
    request,
    metadata || {},
    this.methodDescriptoraddDirectMessenger);
  }

  methodDescriptorremoveDirectMessenger = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/removeDirectMessenger',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  removeDirectMessenger(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  removeDirectMessenger(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  removeDirectMessenger(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/removeDirectMessenger',
        request,
        metadata || {},
        this.methodDescriptorremoveDirectMessenger,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/removeDirectMessenger',
    request,
    metadata || {},
    this.methodDescriptorremoveDirectMessenger);
  }

  methodDescriptorsend_phone_verification_code = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/send_phone_verification_code',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  send_phone_verification_code(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  send_phone_verification_code(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  send_phone_verification_code(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/send_phone_verification_code',
        request,
        metadata || {},
        this.methodDescriptorsend_phone_verification_code,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/send_phone_verification_code',
    request,
    metadata || {},
    this.methodDescriptorsend_phone_verification_code);
  }

  methodDescriptorverify_phone_verification_code = new grpcWeb.MethodDescriptor(
    '/qreeket.QreeketGatewayService/verify_phone_verification_code',
    grpcWeb.MethodType.UNARY,
    sms_pb.VerifyPhoneRequest,
    google_protobuf_empty_pb.Empty,
    (request: sms_pb.VerifyPhoneRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  verify_phone_verification_code(
    request: sms_pb.VerifyPhoneRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  verify_phone_verification_code(
    request: sms_pb.VerifyPhoneRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  verify_phone_verification_code(
    request: sms_pb.VerifyPhoneRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.QreeketGatewayService/verify_phone_verification_code',
        request,
        metadata || {},
        this.methodDescriptorverify_phone_verification_code,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.QreeketGatewayService/verify_phone_verification_code',
    request,
    metadata || {},
    this.methodDescriptorverify_phone_verification_code);
  }

}

