// source: messaging.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.qreeket.DirectMessenger', null, global);
goog.exportSymbol('proto.qreeket.DirectMessengerList', null, global);
goog.exportSymbol('proto.qreeket.GetMessagesRequest', null, global);
goog.exportSymbol('proto.qreeket.GetMessagesRequest.RecipientCase', null, global);
goog.exportSymbol('proto.qreeket.MessageAttachmentType', null, global);
goog.exportSymbol('proto.qreeket.MessageChat', null, global);
goog.exportSymbol('proto.qreeket.MessageList', null, global);
goog.exportSymbol('proto.qreeket.MessageListItem', null, global);
goog.exportSymbol('proto.qreeket.MessageListItem.ItemCase', null, global);
goog.exportSymbol('proto.qreeket.MessageStatus', null, global);
goog.exportSymbol('proto.qreeket.MessageThread', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qreeket.MessageChat = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qreeket.MessageChat.repeatedFields_, null);
};
goog.inherits(proto.qreeket.MessageChat, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qreeket.MessageChat.displayName = 'proto.qreeket.MessageChat';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qreeket.MessageThread = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qreeket.MessageThread.repeatedFields_, null);
};
goog.inherits(proto.qreeket.MessageThread, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qreeket.MessageThread.displayName = 'proto.qreeket.MessageThread';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qreeket.MessageListItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qreeket.MessageListItem.oneofGroups_);
};
goog.inherits(proto.qreeket.MessageListItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qreeket.MessageListItem.displayName = 'proto.qreeket.MessageListItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qreeket.MessageList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qreeket.MessageList.repeatedFields_, null);
};
goog.inherits(proto.qreeket.MessageList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qreeket.MessageList.displayName = 'proto.qreeket.MessageList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qreeket.GetMessagesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qreeket.GetMessagesRequest.oneofGroups_);
};
goog.inherits(proto.qreeket.GetMessagesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qreeket.GetMessagesRequest.displayName = 'proto.qreeket.GetMessagesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qreeket.DirectMessenger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qreeket.DirectMessenger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qreeket.DirectMessenger.displayName = 'proto.qreeket.DirectMessenger';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qreeket.DirectMessengerList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qreeket.DirectMessengerList.repeatedFields_, null);
};
goog.inherits(proto.qreeket.DirectMessengerList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qreeket.DirectMessengerList.displayName = 'proto.qreeket.DirectMessengerList';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qreeket.MessageChat.repeatedFields_ = [13,16,17];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qreeket.MessageChat.prototype.toObject = function(opt_includeInstance) {
  return proto.qreeket.MessageChat.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qreeket.MessageChat} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.MessageChat.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sender: jspb.Message.getFieldWithDefault(msg, 2, ""),
    recipient: jspb.Message.getFieldWithDefault(msg, 3, ""),
    body: jspb.Message.getFieldWithDefault(msg, 5, ""),
    status: jspb.Message.getFieldWithDefault(msg, 6, 0),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedat: (f = msg.getUpdatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    sentat: (f = msg.getSentat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    receivedat: (f = msg.getReceivedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    readat: (f = msg.getReadat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    deletedat: (f = msg.getDeletedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    readbyList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
    attachment: jspb.Message.getFieldWithDefault(msg, 14, ""),
    attachmenttype: jspb.Message.getFieldWithDefault(msg, 15, 0),
    reactionsList: (f = jspb.Message.getRepeatedField(msg, 16)) == null ? undefined : f,
    mentionsList: (f = jspb.Message.getRepeatedField(msg, 17)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qreeket.MessageChat}
 */
proto.qreeket.MessageChat.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qreeket.MessageChat;
  return proto.qreeket.MessageChat.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qreeket.MessageChat} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qreeket.MessageChat}
 */
proto.qreeket.MessageChat.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipient(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    case 6:
      var value = /** @type {!proto.qreeket.MessageStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSentat(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setReceivedat(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setReadat(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeletedat(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.addReadby(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttachment(value);
      break;
    case 15:
      var value = /** @type {!proto.qreeket.MessageAttachmentType} */ (reader.readEnum());
      msg.setAttachmenttype(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.addReactions(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.addMentions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qreeket.MessageChat.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qreeket.MessageChat.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qreeket.MessageChat} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.MessageChat.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRecipient();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSentat();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getReceivedat();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getReadat();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeletedat();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getReadbyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getAttachmenttype();
  if (f !== 0.0) {
    writer.writeEnum(
      15,
      f
    );
  }
  f = message.getReactionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      16,
      f
    );
  }
  f = message.getMentionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      17,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.qreeket.MessageChat.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sender = 2;
 * @return {string}
 */
proto.qreeket.MessageChat.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string recipient = 3;
 * @return {string}
 */
proto.qreeket.MessageChat.prototype.getRecipient = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.setRecipient = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string body = 5;
 * @return {string}
 */
proto.qreeket.MessageChat.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.setBody = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional MessageStatus status = 6;
 * @return {!proto.qreeket.MessageStatus}
 */
proto.qreeket.MessageChat.prototype.getStatus = function() {
  return /** @type {!proto.qreeket.MessageStatus} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.qreeket.MessageStatus} value
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp createdAt = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.qreeket.MessageChat.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.qreeket.MessageChat} returns this
*/
proto.qreeket.MessageChat.prototype.setCreatedat = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.clearCreatedat = function() {
  return this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.MessageChat.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp updatedAt = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.qreeket.MessageChat.prototype.getUpdatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.qreeket.MessageChat} returns this
*/
proto.qreeket.MessageChat.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.MessageChat.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Timestamp sentAt = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.qreeket.MessageChat.prototype.getSentat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.qreeket.MessageChat} returns this
*/
proto.qreeket.MessageChat.prototype.setSentat = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.clearSentat = function() {
  return this.setSentat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.MessageChat.prototype.hasSentat = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Timestamp receivedAt = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.qreeket.MessageChat.prototype.getReceivedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.qreeket.MessageChat} returns this
*/
proto.qreeket.MessageChat.prototype.setReceivedat = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.clearReceivedat = function() {
  return this.setReceivedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.MessageChat.prototype.hasReceivedat = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp readAt = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.qreeket.MessageChat.prototype.getReadat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.qreeket.MessageChat} returns this
*/
proto.qreeket.MessageChat.prototype.setReadat = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.clearReadat = function() {
  return this.setReadat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.MessageChat.prototype.hasReadat = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional google.protobuf.Timestamp deletedAt = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.qreeket.MessageChat.prototype.getDeletedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.qreeket.MessageChat} returns this
*/
proto.qreeket.MessageChat.prototype.setDeletedat = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.clearDeletedat = function() {
  return this.setDeletedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.MessageChat.prototype.hasDeletedat = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated string readBy = 13;
 * @return {!Array<string>}
 */
proto.qreeket.MessageChat.prototype.getReadbyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.setReadbyList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.addReadby = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.clearReadbyList = function() {
  return this.setReadbyList([]);
};


/**
 * optional string attachment = 14;
 * @return {string}
 */
proto.qreeket.MessageChat.prototype.getAttachment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.setAttachment = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.clearAttachment = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.MessageChat.prototype.hasAttachment = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional MessageAttachmentType attachmentType = 15;
 * @return {!proto.qreeket.MessageAttachmentType}
 */
proto.qreeket.MessageChat.prototype.getAttachmenttype = function() {
  return /** @type {!proto.qreeket.MessageAttachmentType} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {!proto.qreeket.MessageAttachmentType} value
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.setAttachmenttype = function(value) {
  return jspb.Message.setProto3EnumField(this, 15, value);
};


/**
 * repeated string reactions = 16;
 * @return {!Array<string>}
 */
proto.qreeket.MessageChat.prototype.getReactionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 16));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.setReactionsList = function(value) {
  return jspb.Message.setField(this, 16, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.addReactions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.clearReactionsList = function() {
  return this.setReactionsList([]);
};


/**
 * repeated string mentions = 17;
 * @return {!Array<string>}
 */
proto.qreeket.MessageChat.prototype.getMentionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 17));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.setMentionsList = function(value) {
  return jspb.Message.setField(this, 17, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.addMentions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.qreeket.MessageChat} returns this
 */
proto.qreeket.MessageChat.prototype.clearMentionsList = function() {
  return this.setMentionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qreeket.MessageThread.repeatedFields_ = [14,15,16,17];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qreeket.MessageThread.prototype.toObject = function(opt_includeInstance) {
  return proto.qreeket.MessageThread.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qreeket.MessageThread} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.MessageThread.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sender: jspb.Message.getFieldWithDefault(msg, 2, ""),
    recipient: jspb.Message.getFieldWithDefault(msg, 3, ""),
    body: jspb.Message.getFieldWithDefault(msg, 5, ""),
    status: jspb.Message.getFieldWithDefault(msg, 6, 0),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedat: (f = msg.getUpdatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    sentat: (f = msg.getSentat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    receivedat: (f = msg.getReceivedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    readat: (f = msg.getReadat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    deletedat: (f = msg.getDeletedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    subject: jspb.Message.getFieldWithDefault(msg, 13, ""),
    readbyList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
    reactionsList: (f = jspb.Message.getRepeatedField(msg, 15)) == null ? undefined : f,
    mentionsList: (f = jspb.Message.getRepeatedField(msg, 16)) == null ? undefined : f,
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    proto.qreeket.MessageChat.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qreeket.MessageThread}
 */
proto.qreeket.MessageThread.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qreeket.MessageThread;
  return proto.qreeket.MessageThread.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qreeket.MessageThread} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qreeket.MessageThread}
 */
proto.qreeket.MessageThread.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipient(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    case 6:
      var value = /** @type {!proto.qreeket.MessageStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSentat(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setReceivedat(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setReadat(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeletedat(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addReadby(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.addReactions(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.addMentions(value);
      break;
    case 17:
      var value = new proto.qreeket.MessageChat;
      reader.readMessage(value,proto.qreeket.MessageChat.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qreeket.MessageThread.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qreeket.MessageThread.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qreeket.MessageThread} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.MessageThread.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRecipient();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSentat();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getReceivedat();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getReadat();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeletedat();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getReadbyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
  f = message.getReactionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      15,
      f
    );
  }
  f = message.getMentionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      16,
      f
    );
  }
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      proto.qreeket.MessageChat.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.qreeket.MessageThread.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sender = 2;
 * @return {string}
 */
proto.qreeket.MessageThread.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string recipient = 3;
 * @return {string}
 */
proto.qreeket.MessageThread.prototype.getRecipient = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.setRecipient = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string body = 5;
 * @return {string}
 */
proto.qreeket.MessageThread.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.setBody = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional MessageStatus status = 6;
 * @return {!proto.qreeket.MessageStatus}
 */
proto.qreeket.MessageThread.prototype.getStatus = function() {
  return /** @type {!proto.qreeket.MessageStatus} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.qreeket.MessageStatus} value
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp createdAt = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.qreeket.MessageThread.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.qreeket.MessageThread} returns this
*/
proto.qreeket.MessageThread.prototype.setCreatedat = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.clearCreatedat = function() {
  return this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.MessageThread.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp updatedAt = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.qreeket.MessageThread.prototype.getUpdatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.qreeket.MessageThread} returns this
*/
proto.qreeket.MessageThread.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.MessageThread.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Timestamp sentAt = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.qreeket.MessageThread.prototype.getSentat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.qreeket.MessageThread} returns this
*/
proto.qreeket.MessageThread.prototype.setSentat = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.clearSentat = function() {
  return this.setSentat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.MessageThread.prototype.hasSentat = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Timestamp receivedAt = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.qreeket.MessageThread.prototype.getReceivedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.qreeket.MessageThread} returns this
*/
proto.qreeket.MessageThread.prototype.setReceivedat = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.clearReceivedat = function() {
  return this.setReceivedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.MessageThread.prototype.hasReceivedat = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp readAt = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.qreeket.MessageThread.prototype.getReadat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.qreeket.MessageThread} returns this
*/
proto.qreeket.MessageThread.prototype.setReadat = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.clearReadat = function() {
  return this.setReadat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.MessageThread.prototype.hasReadat = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional google.protobuf.Timestamp deletedAt = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.qreeket.MessageThread.prototype.getDeletedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.qreeket.MessageThread} returns this
*/
proto.qreeket.MessageThread.prototype.setDeletedat = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.clearDeletedat = function() {
  return this.setDeletedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.MessageThread.prototype.hasDeletedat = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string subject = 13;
 * @return {string}
 */
proto.qreeket.MessageThread.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * repeated string readBy = 14;
 * @return {!Array<string>}
 */
proto.qreeket.MessageThread.prototype.getReadbyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.setReadbyList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.addReadby = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.clearReadbyList = function() {
  return this.setReadbyList([]);
};


/**
 * repeated string reactions = 15;
 * @return {!Array<string>}
 */
proto.qreeket.MessageThread.prototype.getReactionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 15));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.setReactionsList = function(value) {
  return jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.addReactions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.clearReactionsList = function() {
  return this.setReactionsList([]);
};


/**
 * repeated string mentions = 16;
 * @return {!Array<string>}
 */
proto.qreeket.MessageThread.prototype.getMentionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 16));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.setMentionsList = function(value) {
  return jspb.Message.setField(this, 16, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.addMentions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.clearMentionsList = function() {
  return this.setMentionsList([]);
};


/**
 * repeated MessageChat messages = 17;
 * @return {!Array<!proto.qreeket.MessageChat>}
 */
proto.qreeket.MessageThread.prototype.getMessagesList = function() {
  return /** @type{!Array<!proto.qreeket.MessageChat>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qreeket.MessageChat, 17));
};


/**
 * @param {!Array<!proto.qreeket.MessageChat>} value
 * @return {!proto.qreeket.MessageThread} returns this
*/
proto.qreeket.MessageThread.prototype.setMessagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.qreeket.MessageChat=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qreeket.MessageChat}
 */
proto.qreeket.MessageThread.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.qreeket.MessageChat, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.qreeket.MessageThread} returns this
 */
proto.qreeket.MessageThread.prototype.clearMessagesList = function() {
  return this.setMessagesList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qreeket.MessageListItem.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.qreeket.MessageListItem.ItemCase = {
  ITEM_NOT_SET: 0,
  MESSAGE: 1,
  THREAD: 2
};

/**
 * @return {proto.qreeket.MessageListItem.ItemCase}
 */
proto.qreeket.MessageListItem.prototype.getItemCase = function() {
  return /** @type {proto.qreeket.MessageListItem.ItemCase} */(jspb.Message.computeOneofCase(this, proto.qreeket.MessageListItem.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qreeket.MessageListItem.prototype.toObject = function(opt_includeInstance) {
  return proto.qreeket.MessageListItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qreeket.MessageListItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.MessageListItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: (f = msg.getMessage()) && proto.qreeket.MessageChat.toObject(includeInstance, f),
    thread: (f = msg.getThread()) && proto.qreeket.MessageThread.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qreeket.MessageListItem}
 */
proto.qreeket.MessageListItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qreeket.MessageListItem;
  return proto.qreeket.MessageListItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qreeket.MessageListItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qreeket.MessageListItem}
 */
proto.qreeket.MessageListItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qreeket.MessageChat;
      reader.readMessage(value,proto.qreeket.MessageChat.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    case 2:
      var value = new proto.qreeket.MessageThread;
      reader.readMessage(value,proto.qreeket.MessageThread.deserializeBinaryFromReader);
      msg.setThread(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qreeket.MessageListItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qreeket.MessageListItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qreeket.MessageListItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.MessageListItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.qreeket.MessageChat.serializeBinaryToWriter
    );
  }
  f = message.getThread();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.qreeket.MessageThread.serializeBinaryToWriter
    );
  }
};


/**
 * optional MessageChat message = 1;
 * @return {?proto.qreeket.MessageChat}
 */
proto.qreeket.MessageListItem.prototype.getMessage = function() {
  return /** @type{?proto.qreeket.MessageChat} */ (
    jspb.Message.getWrapperField(this, proto.qreeket.MessageChat, 1));
};


/**
 * @param {?proto.qreeket.MessageChat|undefined} value
 * @return {!proto.qreeket.MessageListItem} returns this
*/
proto.qreeket.MessageListItem.prototype.setMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.qreeket.MessageListItem.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qreeket.MessageListItem} returns this
 */
proto.qreeket.MessageListItem.prototype.clearMessage = function() {
  return this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.MessageListItem.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MessageThread thread = 2;
 * @return {?proto.qreeket.MessageThread}
 */
proto.qreeket.MessageListItem.prototype.getThread = function() {
  return /** @type{?proto.qreeket.MessageThread} */ (
    jspb.Message.getWrapperField(this, proto.qreeket.MessageThread, 2));
};


/**
 * @param {?proto.qreeket.MessageThread|undefined} value
 * @return {!proto.qreeket.MessageListItem} returns this
*/
proto.qreeket.MessageListItem.prototype.setThread = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.qreeket.MessageListItem.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qreeket.MessageListItem} returns this
 */
proto.qreeket.MessageListItem.prototype.clearThread = function() {
  return this.setThread(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.MessageListItem.prototype.hasThread = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qreeket.MessageList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qreeket.MessageList.prototype.toObject = function(opt_includeInstance) {
  return proto.qreeket.MessageList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qreeket.MessageList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.MessageList.toObject = function(includeInstance, msg) {
  var f, obj = {
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    proto.qreeket.MessageListItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qreeket.MessageList}
 */
proto.qreeket.MessageList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qreeket.MessageList;
  return proto.qreeket.MessageList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qreeket.MessageList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qreeket.MessageList}
 */
proto.qreeket.MessageList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qreeket.MessageListItem;
      reader.readMessage(value,proto.qreeket.MessageListItem.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qreeket.MessageList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qreeket.MessageList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qreeket.MessageList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.MessageList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.qreeket.MessageListItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MessageListItem messages = 1;
 * @return {!Array<!proto.qreeket.MessageListItem>}
 */
proto.qreeket.MessageList.prototype.getMessagesList = function() {
  return /** @type{!Array<!proto.qreeket.MessageListItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qreeket.MessageListItem, 1));
};


/**
 * @param {!Array<!proto.qreeket.MessageListItem>} value
 * @return {!proto.qreeket.MessageList} returns this
*/
proto.qreeket.MessageList.prototype.setMessagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.qreeket.MessageListItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qreeket.MessageListItem}
 */
proto.qreeket.MessageList.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.qreeket.MessageListItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.qreeket.MessageList} returns this
 */
proto.qreeket.MessageList.prototype.clearMessagesList = function() {
  return this.setMessagesList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qreeket.GetMessagesRequest.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.qreeket.GetMessagesRequest.RecipientCase = {
  RECIPIENT_NOT_SET: 0,
  DM: 3,
  CHANNEL: 4
};

/**
 * @return {proto.qreeket.GetMessagesRequest.RecipientCase}
 */
proto.qreeket.GetMessagesRequest.prototype.getRecipientCase = function() {
  return /** @type {proto.qreeket.GetMessagesRequest.RecipientCase} */(jspb.Message.computeOneofCase(this, proto.qreeket.GetMessagesRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qreeket.GetMessagesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.qreeket.GetMessagesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qreeket.GetMessagesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.GetMessagesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dm: jspb.Message.getFieldWithDefault(msg, 3, ""),
    channel: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qreeket.GetMessagesRequest}
 */
proto.qreeket.GetMessagesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qreeket.GetMessagesRequest;
  return proto.qreeket.GetMessagesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qreeket.GetMessagesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qreeket.GetMessagesRequest}
 */
proto.qreeket.GetMessagesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDm(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qreeket.GetMessagesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qreeket.GetMessagesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qreeket.GetMessagesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.GetMessagesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.qreeket.GetMessagesRequest.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.GetMessagesRequest} returns this
 */
proto.qreeket.GetMessagesRequest.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string dm = 3;
 * @return {string}
 */
proto.qreeket.GetMessagesRequest.prototype.getDm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.GetMessagesRequest} returns this
 */
proto.qreeket.GetMessagesRequest.prototype.setDm = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.qreeket.GetMessagesRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.GetMessagesRequest} returns this
 */
proto.qreeket.GetMessagesRequest.prototype.clearDm = function() {
  return jspb.Message.setOneofField(this, 3, proto.qreeket.GetMessagesRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.GetMessagesRequest.prototype.hasDm = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string channel = 4;
 * @return {string}
 */
proto.qreeket.GetMessagesRequest.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.GetMessagesRequest} returns this
 */
proto.qreeket.GetMessagesRequest.prototype.setChannel = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.qreeket.GetMessagesRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.GetMessagesRequest} returns this
 */
proto.qreeket.GetMessagesRequest.prototype.clearChannel = function() {
  return jspb.Message.setOneofField(this, 4, proto.qreeket.GetMessagesRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.GetMessagesRequest.prototype.hasChannel = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qreeket.DirectMessenger.prototype.toObject = function(opt_includeInstance) {
  return proto.qreeket.DirectMessenger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qreeket.DirectMessenger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.DirectMessenger.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    avatar: jspb.Message.getFieldWithDefault(msg, 3, ""),
    online: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedat: (f = msg.getUpdatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastseen: (f = msg.getLastseen()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    muted: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    blocked: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    archived: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    bio: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qreeket.DirectMessenger}
 */
proto.qreeket.DirectMessenger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qreeket.DirectMessenger;
  return proto.qreeket.DirectMessenger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qreeket.DirectMessenger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qreeket.DirectMessenger}
 */
proto.qreeket.DirectMessenger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatar(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnline(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastseen(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMuted(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlocked(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setArchived(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setBio(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qreeket.DirectMessenger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qreeket.DirectMessenger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qreeket.DirectMessenger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.DirectMessenger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAvatar();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOnline();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastseen();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMuted();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getBlocked();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getArchived();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.qreeket.DirectMessenger.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.DirectMessenger} returns this
 */
proto.qreeket.DirectMessenger.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.qreeket.DirectMessenger.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.DirectMessenger} returns this
 */
proto.qreeket.DirectMessenger.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string avatar = 3;
 * @return {string}
 */
proto.qreeket.DirectMessenger.prototype.getAvatar = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.DirectMessenger} returns this
 */
proto.qreeket.DirectMessenger.prototype.setAvatar = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool online = 4;
 * @return {boolean}
 */
proto.qreeket.DirectMessenger.prototype.getOnline = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.qreeket.DirectMessenger} returns this
 */
proto.qreeket.DirectMessenger.prototype.setOnline = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp createdAt = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.qreeket.DirectMessenger.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.qreeket.DirectMessenger} returns this
*/
proto.qreeket.DirectMessenger.prototype.setCreatedat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qreeket.DirectMessenger} returns this
 */
proto.qreeket.DirectMessenger.prototype.clearCreatedat = function() {
  return this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.DirectMessenger.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp updatedAt = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.qreeket.DirectMessenger.prototype.getUpdatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.qreeket.DirectMessenger} returns this
*/
proto.qreeket.DirectMessenger.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qreeket.DirectMessenger} returns this
 */
proto.qreeket.DirectMessenger.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.DirectMessenger.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp lastSeen = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.qreeket.DirectMessenger.prototype.getLastseen = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.qreeket.DirectMessenger} returns this
*/
proto.qreeket.DirectMessenger.prototype.setLastseen = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qreeket.DirectMessenger} returns this
 */
proto.qreeket.DirectMessenger.prototype.clearLastseen = function() {
  return this.setLastseen(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.DirectMessenger.prototype.hasLastseen = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool muted = 8;
 * @return {boolean}
 */
proto.qreeket.DirectMessenger.prototype.getMuted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.qreeket.DirectMessenger} returns this
 */
proto.qreeket.DirectMessenger.prototype.setMuted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool blocked = 9;
 * @return {boolean}
 */
proto.qreeket.DirectMessenger.prototype.getBlocked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.qreeket.DirectMessenger} returns this
 */
proto.qreeket.DirectMessenger.prototype.setBlocked = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool archived = 10;
 * @return {boolean}
 */
proto.qreeket.DirectMessenger.prototype.getArchived = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.qreeket.DirectMessenger} returns this
 */
proto.qreeket.DirectMessenger.prototype.setArchived = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string bio = 11;
 * @return {string}
 */
proto.qreeket.DirectMessenger.prototype.getBio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.DirectMessenger} returns this
 */
proto.qreeket.DirectMessenger.prototype.setBio = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.DirectMessenger} returns this
 */
proto.qreeket.DirectMessenger.prototype.clearBio = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.DirectMessenger.prototype.hasBio = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qreeket.DirectMessengerList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qreeket.DirectMessengerList.prototype.toObject = function(opt_includeInstance) {
  return proto.qreeket.DirectMessengerList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qreeket.DirectMessengerList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.DirectMessengerList.toObject = function(includeInstance, msg) {
  var f, obj = {
    messengersList: jspb.Message.toObjectList(msg.getMessengersList(),
    proto.qreeket.DirectMessenger.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qreeket.DirectMessengerList}
 */
proto.qreeket.DirectMessengerList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qreeket.DirectMessengerList;
  return proto.qreeket.DirectMessengerList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qreeket.DirectMessengerList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qreeket.DirectMessengerList}
 */
proto.qreeket.DirectMessengerList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qreeket.DirectMessenger;
      reader.readMessage(value,proto.qreeket.DirectMessenger.deserializeBinaryFromReader);
      msg.addMessengers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qreeket.DirectMessengerList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qreeket.DirectMessengerList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qreeket.DirectMessengerList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.DirectMessengerList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessengersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.qreeket.DirectMessenger.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DirectMessenger messengers = 1;
 * @return {!Array<!proto.qreeket.DirectMessenger>}
 */
proto.qreeket.DirectMessengerList.prototype.getMessengersList = function() {
  return /** @type{!Array<!proto.qreeket.DirectMessenger>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qreeket.DirectMessenger, 1));
};


/**
 * @param {!Array<!proto.qreeket.DirectMessenger>} value
 * @return {!proto.qreeket.DirectMessengerList} returns this
*/
proto.qreeket.DirectMessengerList.prototype.setMessengersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.qreeket.DirectMessenger=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qreeket.DirectMessenger}
 */
proto.qreeket.DirectMessengerList.prototype.addMessengers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.qreeket.DirectMessenger, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.qreeket.DirectMessengerList} returns this
 */
proto.qreeket.DirectMessengerList.prototype.clearMessengersList = function() {
  return this.setMessengersList([]);
};


/**
 * @enum {number}
 */
proto.qreeket.MessageStatus = {
  MESSAGE_STATUS_UNSPECIFIED: 0,
  MESSAGE_STATUS_DRAFT: 1,
  MESSAGE_STATUS_SENT: 2,
  MESSAGE_STATUS_RECEIVED: 3,
  MESSAGE_STATUS_READ: 4,
  MESSAGE_STATUS_DELETED: 5
};

/**
 * @enum {number}
 */
proto.qreeket.MessageAttachmentType = {
  MESSAGE_ATTACHMENT_TYPE_UNSPECIFIED: 0,
  MESSAGE_ATTACHMENT_TYPE_IMAGE: 1,
  MESSAGE_ATTACHMENT_TYPE_VIDEO: 2,
  MESSAGE_ATTACHMENT_TYPE_AUDIO: 3,
  MESSAGE_ATTACHMENT_TYPE_FILE: 4,
  MESSAGE_ATTACHMENT_TYPE_LINK: 5,
  MESSAGE_ATTACHMENT_TYPE_GIF: 6,
  MESSAGE_ATTACHMENT_TYPE_STICKER: 7,
  MESSAGE_ATTACHMENT_TYPE_LOCATION: 8
};

goog.object.extend(exports, proto.qreeket);
