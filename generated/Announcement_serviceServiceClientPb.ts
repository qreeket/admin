/**
 * @fileoverview gRPC-Web generated client stub for qreeket
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.15.8
// source: announcement_service.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';
import * as google_protobuf_wrappers_pb from 'google-protobuf/google/protobuf/wrappers_pb';
import * as announcement_pb from './announcement_pb';


export class AnnouncementServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetAnnouncements = new grpcWeb.MethodDescriptor(
    '/qreeket.AnnouncementService/GetAnnouncements',
    grpcWeb.MethodType.SERVER_STREAMING,
    google_protobuf_empty_pb.Empty,
    announcement_pb.AnnouncementsList,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    announcement_pb.AnnouncementsList.deserializeBinary
  );

  getAnnouncements(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<announcement_pb.AnnouncementsList> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/qreeket.AnnouncementService/GetAnnouncements',
      request,
      metadata || {},
      this.methodDescriptorGetAnnouncements);
  }

  methodDescriptorGetAnnouncement = new grpcWeb.MethodDescriptor(
    '/qreeket.AnnouncementService/GetAnnouncement',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    announcement_pb.Announcement,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    announcement_pb.Announcement.deserializeBinary
  );

  getAnnouncement(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<announcement_pb.Announcement>;

  getAnnouncement(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: announcement_pb.Announcement) => void): grpcWeb.ClientReadableStream<announcement_pb.Announcement>;

  getAnnouncement(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: announcement_pb.Announcement) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AnnouncementService/GetAnnouncement',
        request,
        metadata || {},
        this.methodDescriptorGetAnnouncement,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AnnouncementService/GetAnnouncement',
    request,
    metadata || {},
    this.methodDescriptorGetAnnouncement);
  }

  methodDescriptorCreateAnnouncement = new grpcWeb.MethodDescriptor(
    '/qreeket.AnnouncementService/CreateAnnouncement',
    grpcWeb.MethodType.UNARY,
    announcement_pb.CreateAnnouncementRequest,
    announcement_pb.Announcement,
    (request: announcement_pb.CreateAnnouncementRequest) => {
      return request.serializeBinary();
    },
    announcement_pb.Announcement.deserializeBinary
  );

  createAnnouncement(
    request: announcement_pb.CreateAnnouncementRequest,
    metadata: grpcWeb.Metadata | null): Promise<announcement_pb.Announcement>;

  createAnnouncement(
    request: announcement_pb.CreateAnnouncementRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: announcement_pb.Announcement) => void): grpcWeb.ClientReadableStream<announcement_pb.Announcement>;

  createAnnouncement(
    request: announcement_pb.CreateAnnouncementRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: announcement_pb.Announcement) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AnnouncementService/CreateAnnouncement',
        request,
        metadata || {},
        this.methodDescriptorCreateAnnouncement,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AnnouncementService/CreateAnnouncement',
    request,
    metadata || {},
    this.methodDescriptorCreateAnnouncement);
  }

  methodDescriptorUpdateAnnouncement = new grpcWeb.MethodDescriptor(
    '/qreeket.AnnouncementService/UpdateAnnouncement',
    grpcWeb.MethodType.UNARY,
    announcement_pb.UpdateAnnouncementRequest,
    announcement_pb.Announcement,
    (request: announcement_pb.UpdateAnnouncementRequest) => {
      return request.serializeBinary();
    },
    announcement_pb.Announcement.deserializeBinary
  );

  updateAnnouncement(
    request: announcement_pb.UpdateAnnouncementRequest,
    metadata: grpcWeb.Metadata | null): Promise<announcement_pb.Announcement>;

  updateAnnouncement(
    request: announcement_pb.UpdateAnnouncementRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: announcement_pb.Announcement) => void): grpcWeb.ClientReadableStream<announcement_pb.Announcement>;

  updateAnnouncement(
    request: announcement_pb.UpdateAnnouncementRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: announcement_pb.Announcement) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AnnouncementService/UpdateAnnouncement',
        request,
        metadata || {},
        this.methodDescriptorUpdateAnnouncement,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AnnouncementService/UpdateAnnouncement',
    request,
    metadata || {},
    this.methodDescriptorUpdateAnnouncement);
  }

  methodDescriptorDeleteAnnouncement = new grpcWeb.MethodDescriptor(
    '/qreeket.AnnouncementService/DeleteAnnouncement',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  deleteAnnouncement(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  deleteAnnouncement(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  deleteAnnouncement(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AnnouncementService/DeleteAnnouncement',
        request,
        metadata || {},
        this.methodDescriptorDeleteAnnouncement,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AnnouncementService/DeleteAnnouncement',
    request,
    metadata || {},
    this.methodDescriptorDeleteAnnouncement);
  }

  methodDescriptorSubscribeToAnnouncements = new grpcWeb.MethodDescriptor(
    '/qreeket.AnnouncementService/SubscribeToAnnouncements',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  subscribeToAnnouncements(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  subscribeToAnnouncements(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  subscribeToAnnouncements(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AnnouncementService/SubscribeToAnnouncements',
        request,
        metadata || {},
        this.methodDescriptorSubscribeToAnnouncements,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AnnouncementService/SubscribeToAnnouncements',
    request,
    metadata || {},
    this.methodDescriptorSubscribeToAnnouncements);
  }

  methodDescriptorUnsubscribeFromAnnouncements = new grpcWeb.MethodDescriptor(
    '/qreeket.AnnouncementService/UnsubscribeFromAnnouncements',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  unsubscribeFromAnnouncements(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  unsubscribeFromAnnouncements(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  unsubscribeFromAnnouncements(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/qreeket.AnnouncementService/UnsubscribeFromAnnouncements',
        request,
        metadata || {},
        this.methodDescriptorUnsubscribeFromAnnouncements,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/qreeket.AnnouncementService/UnsubscribeFromAnnouncements',
    request,
    metadata || {},
    this.methodDescriptorUnsubscribeFromAnnouncements);
  }

}

