// source: auth.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.qreeket.AccessTokenStore', null, global);
goog.exportSymbol('proto.qreeket.Account', null, global);
goog.exportSymbol('proto.qreeket.AuthenticateWithSocialAccountRequest', null, global);
goog.exportSymbol('proto.qreeket.AuthenticateWithSocialAccountRequest.AuthAvatarCase', null, global);
goog.exportSymbol('proto.qreeket.College', null, global);
goog.exportSymbol('proto.qreeket.Country', null, global);
goog.exportSymbol('proto.qreeket.GetCollegesResponse', null, global);
goog.exportSymbol('proto.qreeket.GetCountriesResponse', null, global);
goog.exportSymbol('proto.qreeket.LoginRequest', null, global);
goog.exportSymbol('proto.qreeket.LoginRequest.PayloadCase', null, global);
goog.exportSymbol('proto.qreeket.RegisterRequest', null, global);
goog.exportSymbol('proto.qreeket.RegisterRequest.AvatarCase', null, global);
goog.exportSymbol('proto.qreeket.RequestPasswordResetRequest', null, global);
goog.exportSymbol('proto.qreeket.RequestPasswordResetRequest.RequestPasswordResetPayloadCase', null, global);
goog.exportSymbol('proto.qreeket.ResetPasswordRequest', null, global);
goog.exportSymbol('proto.qreeket.ResetPasswordRequest.ResetPayloadCase', null, global);
goog.exportSymbol('proto.qreeket.UserType', null, global);
goog.exportSymbol('proto.qreeket.ValidateAccessTokenResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qreeket.AuthenticateWithSocialAccountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qreeket.AuthenticateWithSocialAccountRequest.oneofGroups_);
};
goog.inherits(proto.qreeket.AuthenticateWithSocialAccountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qreeket.AuthenticateWithSocialAccountRequest.displayName = 'proto.qreeket.AuthenticateWithSocialAccountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qreeket.GetCollegesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qreeket.GetCollegesResponse.repeatedFields_, null);
};
goog.inherits(proto.qreeket.GetCollegesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qreeket.GetCollegesResponse.displayName = 'proto.qreeket.GetCollegesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qreeket.GetCountriesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qreeket.GetCountriesResponse.repeatedFields_, null);
};
goog.inherits(proto.qreeket.GetCountriesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qreeket.GetCountriesResponse.displayName = 'proto.qreeket.GetCountriesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qreeket.ValidateAccessTokenResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qreeket.ValidateAccessTokenResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qreeket.ValidateAccessTokenResponse.displayName = 'proto.qreeket.ValidateAccessTokenResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qreeket.RequestPasswordResetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qreeket.RequestPasswordResetRequest.oneofGroups_);
};
goog.inherits(proto.qreeket.RequestPasswordResetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qreeket.RequestPasswordResetRequest.displayName = 'proto.qreeket.RequestPasswordResetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qreeket.LoginRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qreeket.LoginRequest.oneofGroups_);
};
goog.inherits(proto.qreeket.LoginRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qreeket.LoginRequest.displayName = 'proto.qreeket.LoginRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qreeket.RegisterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qreeket.RegisterRequest.oneofGroups_);
};
goog.inherits(proto.qreeket.RegisterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qreeket.RegisterRequest.displayName = 'proto.qreeket.RegisterRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qreeket.ResetPasswordRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qreeket.ResetPasswordRequest.oneofGroups_);
};
goog.inherits(proto.qreeket.ResetPasswordRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qreeket.ResetPasswordRequest.displayName = 'proto.qreeket.ResetPasswordRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qreeket.Account = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qreeket.Account, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qreeket.Account.displayName = 'proto.qreeket.Account';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qreeket.AccessTokenStore = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qreeket.AccessTokenStore, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qreeket.AccessTokenStore.displayName = 'proto.qreeket.AccessTokenStore';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qreeket.Country = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qreeket.Country, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qreeket.Country.displayName = 'proto.qreeket.Country';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qreeket.College = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qreeket.College, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.qreeket.College.displayName = 'proto.qreeket.College';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.AuthAvatarCase = {
  AUTH_AVATAR_NOT_SET: 0,
  AVATAR_URL: 3,
  AVATAR_DATA: 4
};

/**
 * @return {proto.qreeket.AuthenticateWithSocialAccountRequest.AuthAvatarCase}
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.getAuthAvatarCase = function() {
  return /** @type {proto.qreeket.AuthenticateWithSocialAccountRequest.AuthAvatarCase} */(jspb.Message.computeOneofCase(this, proto.qreeket.AuthenticateWithSocialAccountRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.qreeket.AuthenticateWithSocialAccountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qreeket.AuthenticateWithSocialAccountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    phoneNumber: jspb.Message.getFieldWithDefault(msg, 1, ""),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    avatarUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    avatarData: msg.getAvatarData_asB64(),
    countryId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    collegeId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    email: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qreeket.AuthenticateWithSocialAccountRequest}
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qreeket.AuthenticateWithSocialAccountRequest;
  return proto.qreeket.AuthenticateWithSocialAccountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qreeket.AuthenticateWithSocialAccountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qreeket.AuthenticateWithSocialAccountRequest}
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatarUrl(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAvatarData(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollegeId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qreeket.AuthenticateWithSocialAccountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qreeket.AuthenticateWithSocialAccountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getCountryId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCollegeId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string phone_number = 1;
 * @return {string}
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.getPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.AuthenticateWithSocialAccountRequest} returns this
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.setPhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.AuthenticateWithSocialAccountRequest} returns this
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string avatar_url = 3;
 * @return {string}
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.getAvatarUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.AuthenticateWithSocialAccountRequest} returns this
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.setAvatarUrl = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.qreeket.AuthenticateWithSocialAccountRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.AuthenticateWithSocialAccountRequest} returns this
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.clearAvatarUrl = function() {
  return jspb.Message.setOneofField(this, 3, proto.qreeket.AuthenticateWithSocialAccountRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.hasAvatarUrl = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes avatar_data = 4;
 * @return {string}
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.getAvatarData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes avatar_data = 4;
 * This is a type-conversion wrapper around `getAvatarData()`
 * @return {string}
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.getAvatarData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAvatarData()));
};


/**
 * optional bytes avatar_data = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAvatarData()`
 * @return {!Uint8Array}
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.getAvatarData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAvatarData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.qreeket.AuthenticateWithSocialAccountRequest} returns this
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.setAvatarData = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.qreeket.AuthenticateWithSocialAccountRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.AuthenticateWithSocialAccountRequest} returns this
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.clearAvatarData = function() {
  return jspb.Message.setOneofField(this, 4, proto.qreeket.AuthenticateWithSocialAccountRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.hasAvatarData = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string country_id = 5;
 * @return {string}
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.getCountryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.AuthenticateWithSocialAccountRequest} returns this
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.setCountryId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string college_id = 6;
 * @return {string}
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.getCollegeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.AuthenticateWithSocialAccountRequest} returns this
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.setCollegeId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string email = 7;
 * @return {string}
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.AuthenticateWithSocialAccountRequest} returns this
 */
proto.qreeket.AuthenticateWithSocialAccountRequest.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qreeket.GetCollegesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qreeket.GetCollegesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.qreeket.GetCollegesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qreeket.GetCollegesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.GetCollegesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    collegesList: jspb.Message.toObjectList(msg.getCollegesList(),
    proto.qreeket.College.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qreeket.GetCollegesResponse}
 */
proto.qreeket.GetCollegesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qreeket.GetCollegesResponse;
  return proto.qreeket.GetCollegesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qreeket.GetCollegesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qreeket.GetCollegesResponse}
 */
proto.qreeket.GetCollegesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qreeket.College;
      reader.readMessage(value,proto.qreeket.College.deserializeBinaryFromReader);
      msg.addColleges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qreeket.GetCollegesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qreeket.GetCollegesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qreeket.GetCollegesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.GetCollegesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollegesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.qreeket.College.serializeBinaryToWriter
    );
  }
};


/**
 * repeated College colleges = 1;
 * @return {!Array<!proto.qreeket.College>}
 */
proto.qreeket.GetCollegesResponse.prototype.getCollegesList = function() {
  return /** @type{!Array<!proto.qreeket.College>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qreeket.College, 1));
};


/**
 * @param {!Array<!proto.qreeket.College>} value
 * @return {!proto.qreeket.GetCollegesResponse} returns this
*/
proto.qreeket.GetCollegesResponse.prototype.setCollegesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.qreeket.College=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qreeket.College}
 */
proto.qreeket.GetCollegesResponse.prototype.addColleges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.qreeket.College, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.qreeket.GetCollegesResponse} returns this
 */
proto.qreeket.GetCollegesResponse.prototype.clearCollegesList = function() {
  return this.setCollegesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qreeket.GetCountriesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qreeket.GetCountriesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.qreeket.GetCountriesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qreeket.GetCountriesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.GetCountriesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    countriesList: jspb.Message.toObjectList(msg.getCountriesList(),
    proto.qreeket.Country.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qreeket.GetCountriesResponse}
 */
proto.qreeket.GetCountriesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qreeket.GetCountriesResponse;
  return proto.qreeket.GetCountriesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qreeket.GetCountriesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qreeket.GetCountriesResponse}
 */
proto.qreeket.GetCountriesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qreeket.Country;
      reader.readMessage(value,proto.qreeket.Country.deserializeBinaryFromReader);
      msg.addCountries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qreeket.GetCountriesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qreeket.GetCountriesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qreeket.GetCountriesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.GetCountriesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.qreeket.Country.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Country countries = 1;
 * @return {!Array<!proto.qreeket.Country>}
 */
proto.qreeket.GetCountriesResponse.prototype.getCountriesList = function() {
  return /** @type{!Array<!proto.qreeket.Country>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qreeket.Country, 1));
};


/**
 * @param {!Array<!proto.qreeket.Country>} value
 * @return {!proto.qreeket.GetCountriesResponse} returns this
*/
proto.qreeket.GetCountriesResponse.prototype.setCountriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.qreeket.Country=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qreeket.Country}
 */
proto.qreeket.GetCountriesResponse.prototype.addCountries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.qreeket.Country, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.qreeket.GetCountriesResponse} returns this
 */
proto.qreeket.GetCountriesResponse.prototype.clearCountriesList = function() {
  return this.setCountriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qreeket.ValidateAccessTokenResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.qreeket.ValidateAccessTokenResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qreeket.ValidateAccessTokenResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.ValidateAccessTokenResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    phoneNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    username: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qreeket.ValidateAccessTokenResponse}
 */
proto.qreeket.ValidateAccessTokenResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qreeket.ValidateAccessTokenResponse;
  return proto.qreeket.ValidateAccessTokenResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qreeket.ValidateAccessTokenResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qreeket.ValidateAccessTokenResponse}
 */
proto.qreeket.ValidateAccessTokenResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qreeket.ValidateAccessTokenResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qreeket.ValidateAccessTokenResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qreeket.ValidateAccessTokenResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.ValidateAccessTokenResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string account_id = 1;
 * @return {string}
 */
proto.qreeket.ValidateAccessTokenResponse.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.ValidateAccessTokenResponse} returns this
 */
proto.qreeket.ValidateAccessTokenResponse.prototype.setAccountId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.ValidateAccessTokenResponse} returns this
 */
proto.qreeket.ValidateAccessTokenResponse.prototype.clearAccountId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.ValidateAccessTokenResponse.prototype.hasAccountId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string phone_number = 2;
 * @return {string}
 */
proto.qreeket.ValidateAccessTokenResponse.prototype.getPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.ValidateAccessTokenResponse} returns this
 */
proto.qreeket.ValidateAccessTokenResponse.prototype.setPhoneNumber = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.ValidateAccessTokenResponse} returns this
 */
proto.qreeket.ValidateAccessTokenResponse.prototype.clearPhoneNumber = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.ValidateAccessTokenResponse.prototype.hasPhoneNumber = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.qreeket.ValidateAccessTokenResponse.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.ValidateAccessTokenResponse} returns this
 */
proto.qreeket.ValidateAccessTokenResponse.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.ValidateAccessTokenResponse} returns this
 */
proto.qreeket.ValidateAccessTokenResponse.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.ValidateAccessTokenResponse.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qreeket.RequestPasswordResetRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.qreeket.RequestPasswordResetRequest.RequestPasswordResetPayloadCase = {
  REQUEST_PASSWORD_RESET_PAYLOAD_NOT_SET: 0,
  PHONE_NUMBER: 1,
  EMAIL: 2
};

/**
 * @return {proto.qreeket.RequestPasswordResetRequest.RequestPasswordResetPayloadCase}
 */
proto.qreeket.RequestPasswordResetRequest.prototype.getRequestPasswordResetPayloadCase = function() {
  return /** @type {proto.qreeket.RequestPasswordResetRequest.RequestPasswordResetPayloadCase} */(jspb.Message.computeOneofCase(this, proto.qreeket.RequestPasswordResetRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qreeket.RequestPasswordResetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.qreeket.RequestPasswordResetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qreeket.RequestPasswordResetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.RequestPasswordResetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    phoneNumber: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qreeket.RequestPasswordResetRequest}
 */
proto.qreeket.RequestPasswordResetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qreeket.RequestPasswordResetRequest;
  return proto.qreeket.RequestPasswordResetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qreeket.RequestPasswordResetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qreeket.RequestPasswordResetRequest}
 */
proto.qreeket.RequestPasswordResetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qreeket.RequestPasswordResetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qreeket.RequestPasswordResetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qreeket.RequestPasswordResetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.RequestPasswordResetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string phone_number = 1;
 * @return {string}
 */
proto.qreeket.RequestPasswordResetRequest.prototype.getPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.RequestPasswordResetRequest} returns this
 */
proto.qreeket.RequestPasswordResetRequest.prototype.setPhoneNumber = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.qreeket.RequestPasswordResetRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.RequestPasswordResetRequest} returns this
 */
proto.qreeket.RequestPasswordResetRequest.prototype.clearPhoneNumber = function() {
  return jspb.Message.setOneofField(this, 1, proto.qreeket.RequestPasswordResetRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.RequestPasswordResetRequest.prototype.hasPhoneNumber = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.qreeket.RequestPasswordResetRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.RequestPasswordResetRequest} returns this
 */
proto.qreeket.RequestPasswordResetRequest.prototype.setEmail = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.qreeket.RequestPasswordResetRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.RequestPasswordResetRequest} returns this
 */
proto.qreeket.RequestPasswordResetRequest.prototype.clearEmail = function() {
  return jspb.Message.setOneofField(this, 2, proto.qreeket.RequestPasswordResetRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.RequestPasswordResetRequest.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qreeket.LoginRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.qreeket.LoginRequest.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  PHONE_NUMBER: 1,
  EMAIL: 2
};

/**
 * @return {proto.qreeket.LoginRequest.PayloadCase}
 */
proto.qreeket.LoginRequest.prototype.getPayloadCase = function() {
  return /** @type {proto.qreeket.LoginRequest.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.qreeket.LoginRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qreeket.LoginRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.qreeket.LoginRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qreeket.LoginRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.LoginRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    phoneNumber: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    password: jspb.Message.getFieldWithDefault(msg, 3, ""),
    countryId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qreeket.LoginRequest}
 */
proto.qreeket.LoginRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qreeket.LoginRequest;
  return proto.qreeket.LoginRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qreeket.LoginRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qreeket.LoginRequest}
 */
proto.qreeket.LoginRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qreeket.LoginRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qreeket.LoginRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qreeket.LoginRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.LoginRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCountryId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string phone_number = 1;
 * @return {string}
 */
proto.qreeket.LoginRequest.prototype.getPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.LoginRequest} returns this
 */
proto.qreeket.LoginRequest.prototype.setPhoneNumber = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.qreeket.LoginRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.LoginRequest} returns this
 */
proto.qreeket.LoginRequest.prototype.clearPhoneNumber = function() {
  return jspb.Message.setOneofField(this, 1, proto.qreeket.LoginRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.LoginRequest.prototype.hasPhoneNumber = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.qreeket.LoginRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.LoginRequest} returns this
 */
proto.qreeket.LoginRequest.prototype.setEmail = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.qreeket.LoginRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.LoginRequest} returns this
 */
proto.qreeket.LoginRequest.prototype.clearEmail = function() {
  return jspb.Message.setOneofField(this, 2, proto.qreeket.LoginRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.LoginRequest.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string password = 3;
 * @return {string}
 */
proto.qreeket.LoginRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.LoginRequest} returns this
 */
proto.qreeket.LoginRequest.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string country_id = 4;
 * @return {string}
 */
proto.qreeket.LoginRequest.prototype.getCountryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.LoginRequest} returns this
 */
proto.qreeket.LoginRequest.prototype.setCountryId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qreeket.RegisterRequest.oneofGroups_ = [[5,6]];

/**
 * @enum {number}
 */
proto.qreeket.RegisterRequest.AvatarCase = {
  AVATAR_NOT_SET: 0,
  AVATAR_URL: 5,
  AVATAR_DATA: 6
};

/**
 * @return {proto.qreeket.RegisterRequest.AvatarCase}
 */
proto.qreeket.RegisterRequest.prototype.getAvatarCase = function() {
  return /** @type {proto.qreeket.RegisterRequest.AvatarCase} */(jspb.Message.computeOneofCase(this, proto.qreeket.RegisterRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qreeket.RegisterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.qreeket.RegisterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qreeket.RegisterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.RegisterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    phoneNumber: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, ""),
    username: jspb.Message.getFieldWithDefault(msg, 4, ""),
    avatarUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    avatarData: msg.getAvatarData_asB64(),
    countryId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    collegeId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    email: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qreeket.RegisterRequest}
 */
proto.qreeket.RegisterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qreeket.RegisterRequest;
  return proto.qreeket.RegisterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qreeket.RegisterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qreeket.RegisterRequest}
 */
proto.qreeket.RegisterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatarUrl(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAvatarData(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollegeId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qreeket.RegisterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qreeket.RegisterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qreeket.RegisterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.RegisterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getCountryId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCollegeId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string phone_number = 1;
 * @return {string}
 */
proto.qreeket.RegisterRequest.prototype.getPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.RegisterRequest} returns this
 */
proto.qreeket.RegisterRequest.prototype.setPhoneNumber = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.RegisterRequest} returns this
 */
proto.qreeket.RegisterRequest.prototype.clearPhoneNumber = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.RegisterRequest.prototype.hasPhoneNumber = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.qreeket.RegisterRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.RegisterRequest} returns this
 */
proto.qreeket.RegisterRequest.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.qreeket.RegisterRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.RegisterRequest} returns this
 */
proto.qreeket.RegisterRequest.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string avatar_url = 5;
 * @return {string}
 */
proto.qreeket.RegisterRequest.prototype.getAvatarUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.RegisterRequest} returns this
 */
proto.qreeket.RegisterRequest.prototype.setAvatarUrl = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.qreeket.RegisterRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.RegisterRequest} returns this
 */
proto.qreeket.RegisterRequest.prototype.clearAvatarUrl = function() {
  return jspb.Message.setOneofField(this, 5, proto.qreeket.RegisterRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.RegisterRequest.prototype.hasAvatarUrl = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes avatar_data = 6;
 * @return {string}
 */
proto.qreeket.RegisterRequest.prototype.getAvatarData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes avatar_data = 6;
 * This is a type-conversion wrapper around `getAvatarData()`
 * @return {string}
 */
proto.qreeket.RegisterRequest.prototype.getAvatarData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAvatarData()));
};


/**
 * optional bytes avatar_data = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAvatarData()`
 * @return {!Uint8Array}
 */
proto.qreeket.RegisterRequest.prototype.getAvatarData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAvatarData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.qreeket.RegisterRequest} returns this
 */
proto.qreeket.RegisterRequest.prototype.setAvatarData = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.qreeket.RegisterRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.RegisterRequest} returns this
 */
proto.qreeket.RegisterRequest.prototype.clearAvatarData = function() {
  return jspb.Message.setOneofField(this, 6, proto.qreeket.RegisterRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.RegisterRequest.prototype.hasAvatarData = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string country_id = 9;
 * @return {string}
 */
proto.qreeket.RegisterRequest.prototype.getCountryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.RegisterRequest} returns this
 */
proto.qreeket.RegisterRequest.prototype.setCountryId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string college_id = 10;
 * @return {string}
 */
proto.qreeket.RegisterRequest.prototype.getCollegeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.RegisterRequest} returns this
 */
proto.qreeket.RegisterRequest.prototype.setCollegeId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string email = 11;
 * @return {string}
 */
proto.qreeket.RegisterRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.RegisterRequest} returns this
 */
proto.qreeket.RegisterRequest.prototype.setEmail = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.RegisterRequest} returns this
 */
proto.qreeket.RegisterRequest.prototype.clearEmail = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.RegisterRequest.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qreeket.ResetPasswordRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.qreeket.ResetPasswordRequest.ResetPayloadCase = {
  RESET_PAYLOAD_NOT_SET: 0,
  PHONE_NUMBER: 1,
  EMAIL: 2
};

/**
 * @return {proto.qreeket.ResetPasswordRequest.ResetPayloadCase}
 */
proto.qreeket.ResetPasswordRequest.prototype.getResetPayloadCase = function() {
  return /** @type {proto.qreeket.ResetPasswordRequest.ResetPayloadCase} */(jspb.Message.computeOneofCase(this, proto.qreeket.ResetPasswordRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qreeket.ResetPasswordRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.qreeket.ResetPasswordRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qreeket.ResetPasswordRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.ResetPasswordRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    phoneNumber: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    password: jspb.Message.getFieldWithDefault(msg, 4, ""),
    resetToken: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qreeket.ResetPasswordRequest}
 */
proto.qreeket.ResetPasswordRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qreeket.ResetPasswordRequest;
  return proto.qreeket.ResetPasswordRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qreeket.ResetPasswordRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qreeket.ResetPasswordRequest}
 */
proto.qreeket.ResetPasswordRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setResetToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qreeket.ResetPasswordRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qreeket.ResetPasswordRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qreeket.ResetPasswordRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.ResetPasswordRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getResetToken();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string phone_number = 1;
 * @return {string}
 */
proto.qreeket.ResetPasswordRequest.prototype.getPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.ResetPasswordRequest} returns this
 */
proto.qreeket.ResetPasswordRequest.prototype.setPhoneNumber = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.qreeket.ResetPasswordRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.ResetPasswordRequest} returns this
 */
proto.qreeket.ResetPasswordRequest.prototype.clearPhoneNumber = function() {
  return jspb.Message.setOneofField(this, 1, proto.qreeket.ResetPasswordRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.ResetPasswordRequest.prototype.hasPhoneNumber = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.qreeket.ResetPasswordRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.ResetPasswordRequest} returns this
 */
proto.qreeket.ResetPasswordRequest.prototype.setEmail = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.qreeket.ResetPasswordRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.ResetPasswordRequest} returns this
 */
proto.qreeket.ResetPasswordRequest.prototype.clearEmail = function() {
  return jspb.Message.setOneofField(this, 2, proto.qreeket.ResetPasswordRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.ResetPasswordRequest.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string password = 4;
 * @return {string}
 */
proto.qreeket.ResetPasswordRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.ResetPasswordRequest} returns this
 */
proto.qreeket.ResetPasswordRequest.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string reset_token = 5;
 * @return {string}
 */
proto.qreeket.ResetPasswordRequest.prototype.getResetToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.ResetPasswordRequest} returns this
 */
proto.qreeket.ResetPasswordRequest.prototype.setResetToken = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qreeket.Account.prototype.toObject = function(opt_includeInstance) {
  return proto.qreeket.Account.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qreeket.Account} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.Account.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    phoneNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    username: jspb.Message.getFieldWithDefault(msg, 3, ""),
    languageId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    avatarUrl: jspb.Message.getFieldWithDefault(msg, 7, ""),
    countryId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    deviceId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    deviceToken: jspb.Message.getFieldWithDefault(msg, 11, ""),
    deviceType: jspb.Message.getFieldWithDefault(msg, 12, ""),
    isVerified: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    userType: jspb.Message.getFieldWithDefault(msg, 14, 0),
    collegeId: jspb.Message.getFieldWithDefault(msg, 15, ""),
    email: jspb.Message.getFieldWithDefault(msg, 16, ""),
    isVisible: jspb.Message.getBooleanFieldWithDefault(msg, 17, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qreeket.Account}
 */
proto.qreeket.Account.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qreeket.Account;
  return proto.qreeket.Account.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qreeket.Account} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qreeket.Account}
 */
proto.qreeket.Account.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageId(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatarUrl(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceToken(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceType(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsVerified(value);
      break;
    case 14:
      var value = /** @type {!proto.qreeket.UserType} */ (reader.readEnum());
      msg.setUserType(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollegeId(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsVisible(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qreeket.Account.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qreeket.Account.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qreeket.Account} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.Account.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLanguageId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCountryId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {!proto.qreeket.UserType} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeEnum(
      14,
      f
    );
  }
  f = message.getCollegeId();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBool(
      17,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.qreeket.Account.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string phone_number = 2;
 * @return {string}
 */
proto.qreeket.Account.prototype.getPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.setPhoneNumber = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.clearPhoneNumber = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.Account.prototype.hasPhoneNumber = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.qreeket.Account.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string language_id = 4;
 * @return {string}
 */
proto.qreeket.Account.prototype.getLanguageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.setLanguageId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.qreeket.Account.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.qreeket.Account} returns this
*/
proto.qreeket.Account.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.Account.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.qreeket.Account.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.qreeket.Account} returns this
*/
proto.qreeket.Account.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.Account.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string avatar_url = 7;
 * @return {string}
 */
proto.qreeket.Account.prototype.getAvatarUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.setAvatarUrl = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.clearAvatarUrl = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.Account.prototype.hasAvatarUrl = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string country_id = 9;
 * @return {string}
 */
proto.qreeket.Account.prototype.getCountryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.setCountryId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string device_id = 10;
 * @return {string}
 */
proto.qreeket.Account.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.setDeviceId = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.clearDeviceId = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.Account.prototype.hasDeviceId = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string device_token = 11;
 * @return {string}
 */
proto.qreeket.Account.prototype.getDeviceToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.setDeviceToken = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.clearDeviceToken = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.Account.prototype.hasDeviceToken = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string device_type = 12;
 * @return {string}
 */
proto.qreeket.Account.prototype.getDeviceType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.setDeviceType = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.clearDeviceType = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.Account.prototype.hasDeviceType = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool is_verified = 13;
 * @return {boolean}
 */
proto.qreeket.Account.prototype.getIsVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.setIsVerified = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.clearIsVerified = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.Account.prototype.hasIsVerified = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional UserType user_type = 14;
 * @return {!proto.qreeket.UserType}
 */
proto.qreeket.Account.prototype.getUserType = function() {
  return /** @type {!proto.qreeket.UserType} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {!proto.qreeket.UserType} value
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.setUserType = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.clearUserType = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.Account.prototype.hasUserType = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string college_id = 15;
 * @return {string}
 */
proto.qreeket.Account.prototype.getCollegeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.setCollegeId = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string email = 16;
 * @return {string}
 */
proto.qreeket.Account.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.setEmail = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.clearEmail = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.Account.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bool is_visible = 17;
 * @return {boolean}
 */
proto.qreeket.Account.prototype.getIsVisible = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.setIsVisible = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.Account} returns this
 */
proto.qreeket.Account.prototype.clearIsVisible = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.Account.prototype.hasIsVisible = function() {
  return jspb.Message.getField(this, 17) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qreeket.AccessTokenStore.prototype.toObject = function(opt_includeInstance) {
  return proto.qreeket.AccessTokenStore.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qreeket.AccessTokenStore} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.AccessTokenStore.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    refreshToken: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qreeket.AccessTokenStore}
 */
proto.qreeket.AccessTokenStore.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qreeket.AccessTokenStore;
  return proto.qreeket.AccessTokenStore.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qreeket.AccessTokenStore} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qreeket.AccessTokenStore}
 */
proto.qreeket.AccessTokenStore.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefreshToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qreeket.AccessTokenStore.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qreeket.AccessTokenStore.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qreeket.AccessTokenStore} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.AccessTokenStore.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRefreshToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string access_token = 1;
 * @return {string}
 */
proto.qreeket.AccessTokenStore.prototype.getAccessToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.AccessTokenStore} returns this
 */
proto.qreeket.AccessTokenStore.prototype.setAccessToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string refresh_token = 3;
 * @return {string}
 */
proto.qreeket.AccessTokenStore.prototype.getRefreshToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.AccessTokenStore} returns this
 */
proto.qreeket.AccessTokenStore.prototype.setRefreshToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qreeket.Country.prototype.toObject = function(opt_includeInstance) {
  return proto.qreeket.Country.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qreeket.Country} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.Country.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    code: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dialCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 5, ""),
    currencySymbol: jspb.Message.getFieldWithDefault(msg, 6, ""),
    flagUrl: jspb.Message.getFieldWithDefault(msg, 7, ""),
    languageId: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qreeket.Country}
 */
proto.qreeket.Country.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qreeket.Country;
  return proto.qreeket.Country.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qreeket.Country} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qreeket.Country}
 */
proto.qreeket.Country.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDialCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencySymbol(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFlagUrl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qreeket.Country.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qreeket.Country.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qreeket.Country} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.Country.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDialCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCurrencySymbol();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFlagUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLanguageId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.qreeket.Country.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.Country} returns this
 */
proto.qreeket.Country.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.qreeket.Country.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.Country} returns this
 */
proto.qreeket.Country.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string code = 3;
 * @return {string}
 */
proto.qreeket.Country.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.Country} returns this
 */
proto.qreeket.Country.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string dial_code = 4;
 * @return {string}
 */
proto.qreeket.Country.prototype.getDialCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.Country} returns this
 */
proto.qreeket.Country.prototype.setDialCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string currency = 5;
 * @return {string}
 */
proto.qreeket.Country.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.Country} returns this
 */
proto.qreeket.Country.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string currency_symbol = 6;
 * @return {string}
 */
proto.qreeket.Country.prototype.getCurrencySymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.Country} returns this
 */
proto.qreeket.Country.prototype.setCurrencySymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string flag_url = 7;
 * @return {string}
 */
proto.qreeket.Country.prototype.getFlagUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.Country} returns this
 */
proto.qreeket.Country.prototype.setFlagUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string language_id = 8;
 * @return {string}
 */
proto.qreeket.Country.prototype.getLanguageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.Country} returns this
 */
proto.qreeket.Country.prototype.setLanguageId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qreeket.College.prototype.toObject = function(opt_includeInstance) {
  return proto.qreeket.College.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qreeket.College} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.College.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    address: jspb.Message.getFieldWithDefault(msg, 3, ""),
    logoUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    website: jspb.Message.getFieldWithDefault(msg, 5, ""),
    countryId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    bannerUrl: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qreeket.College}
 */
proto.qreeket.College.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qreeket.College;
  return proto.qreeket.College.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qreeket.College} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qreeket.College}
 */
proto.qreeket.College.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogoUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebsite(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBannerUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qreeket.College.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qreeket.College.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qreeket.College} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qreeket.College.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLogoUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getWebsite();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCountryId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.qreeket.College.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.College} returns this
 */
proto.qreeket.College.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.qreeket.College.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.College} returns this
 */
proto.qreeket.College.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.qreeket.College.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.College} returns this
 */
proto.qreeket.College.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string logo_url = 4;
 * @return {string}
 */
proto.qreeket.College.prototype.getLogoUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.College} returns this
 */
proto.qreeket.College.prototype.setLogoUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string website = 5;
 * @return {string}
 */
proto.qreeket.College.prototype.getWebsite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.College} returns this
 */
proto.qreeket.College.prototype.setWebsite = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string country_id = 6;
 * @return {string}
 */
proto.qreeket.College.prototype.getCountryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.College} returns this
 */
proto.qreeket.College.prototype.setCountryId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string banner_url = 7;
 * @return {string}
 */
proto.qreeket.College.prototype.getBannerUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.qreeket.College} returns this
 */
proto.qreeket.College.prototype.setBannerUrl = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.qreeket.College} returns this
 */
proto.qreeket.College.prototype.clearBannerUrl = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.qreeket.College.prototype.hasBannerUrl = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * @enum {number}
 */
proto.qreeket.UserType = {
  STANDARD: 0,
  PREMIUM: 1
};

goog.object.extend(exports, proto.qreeket);
